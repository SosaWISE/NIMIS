//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="CorrectAddressServicesSoap", Namespace="http://www.name-searching.com/CaddressASP/")]
public partial class CorrectAddressServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getAccountInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAccountAccessOperationCompleted;
    
    private System.Threading.SendOrPostCallback CallFindCityStateOperationCompleted;
    
    private System.Threading.SendOrPostCallback CallFindCityCountyOperationCompleted;
    
    private System.Threading.SendOrPostCallback CallFindZipCityOperationCompleted;
    
    private System.Threading.SendOrPostCallback TigerCAOperationCompleted;
    
    private System.Threading.SendOrPostCallback wsTigerCAOperationCompleted;
    
    private System.Threading.SendOrPostCallback callCAOperationCompleted;
    
    private System.Threading.SendOrPostCallback callCA2OperationCompleted;
    
    private System.Threading.SendOrPostCallback CorrectAOperationCompleted;
    
    private System.Threading.SendOrPostCallback wsCorrectAOperationCompleted;
    
    private System.Threading.SendOrPostCallback correctA2OperationCompleted;
    
    private System.Threading.SendOrPostCallback callCAstdOperationCompleted;
    
    private System.Threading.SendOrPostCallback CallStreetSearchOperationCompleted;
    
    private System.Threading.SendOrPostCallback CallStreetSearch2OperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateBatchOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteBatchOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPS3553formOperationCompleted;
    
    private System.Threading.SendOrPostCallback getBatchListOperationCompleted;
    
    /// <remarks/>
    public CorrectAddressServices() {
        this.Url = "http://www.name-searching.com/CaddressASP/CorrectAddressWebService.asmx";
    }
    
    /// <remarks/>
    public event getAccountInfoCompletedEventHandler getAccountInfoCompleted;
    
    /// <remarks/>
    public event getAccountAccessCompletedEventHandler getAccountAccessCompleted;
    
    /// <remarks/>
    public event CallFindCityStateCompletedEventHandler CallFindCityStateCompleted;
    
    /// <remarks/>
    public event CallFindCityCountyCompletedEventHandler CallFindCityCountyCompleted;
    
    /// <remarks/>
    public event CallFindZipCityCompletedEventHandler CallFindZipCityCompleted;
    
    /// <remarks/>
    public event TigerCACompletedEventHandler TigerCACompleted;
    
    /// <remarks/>
    public event wsTigerCACompletedEventHandler wsTigerCACompleted;
    
    /// <remarks/>
    public event callCACompletedEventHandler callCACompleted;
    
    /// <remarks/>
    public event callCA2CompletedEventHandler callCA2Completed;
    
    /// <remarks/>
    public event CorrectACompletedEventHandler CorrectACompleted;
    
    /// <remarks/>
    public event wsCorrectACompletedEventHandler wsCorrectACompleted;
    
    /// <remarks/>
    public event correctA2CompletedEventHandler correctA2Completed;
    
    /// <remarks/>
    public event callCAstdCompletedEventHandler callCAstdCompleted;
    
    /// <remarks/>
    public event CallStreetSearchCompletedEventHandler CallStreetSearchCompleted;
    
    /// <remarks/>
    public event CallStreetSearch2CompletedEventHandler CallStreetSearch2Completed;
    
    /// <remarks/>
    public event CreateBatchCompletedEventHandler CreateBatchCompleted;
    
    /// <remarks/>
    public event DeleteBatchCompletedEventHandler DeleteBatchCompleted;
    
    /// <remarks/>
    public event getPS3553formCompletedEventHandler getPS3553formCompleted;
    
    /// <remarks/>
    public event getBatchListCompletedEventHandler getBatchListCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/getAccountInfo", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getAccountInfo(string username, string password) {
        object[] results = this.Invoke("getAccountInfo", new object[] {
                    username,
                    password});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAccountInfo(string username, string password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAccountInfo", new object[] {
                    username,
                    password}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndgetAccountInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void getAccountInfoAsync(string username, string password) {
        this.getAccountInfoAsync(username, password, null);
    }
    
    /// <remarks/>
    public void getAccountInfoAsync(string username, string password, object userState) {
        if ((this.getAccountInfoOperationCompleted == null)) {
            this.getAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountInfoOperationCompleted);
        }
        this.InvokeAsync("getAccountInfo", new object[] {
                    username,
                    password}, this.getAccountInfoOperationCompleted, userState);
    }
    
    private void OngetAccountInfoOperationCompleted(object arg) {
        if ((this.getAccountInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAccountInfoCompleted(this, new getAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/getAccountAccess", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getAccountAccess(string username, string password) {
        object[] results = this.Invoke("getAccountAccess", new object[] {
                    username,
                    password});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAccountAccess(string username, string password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAccountAccess", new object[] {
                    username,
                    password}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndgetAccountAccess(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void getAccountAccessAsync(string username, string password) {
        this.getAccountAccessAsync(username, password, null);
    }
    
    /// <remarks/>
    public void getAccountAccessAsync(string username, string password, object userState) {
        if ((this.getAccountAccessOperationCompleted == null)) {
            this.getAccountAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountAccessOperationCompleted);
        }
        this.InvokeAsync("getAccountAccess", new object[] {
                    username,
                    password}, this.getAccountAccessOperationCompleted, userState);
    }
    
    private void OngetAccountAccessOperationCompleted(object arg) {
        if ((this.getAccountAccessCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAccountAccessCompleted(this, new getAccountAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/CallFindCityState", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode CallFindCityState(string username, string password, string zip) {
        object[] results = this.Invoke("CallFindCityState", new object[] {
                    username,
                    password,
                    zip});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCallFindCityState(string username, string password, string zip, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CallFindCityState", new object[] {
                    username,
                    password,
                    zip}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndCallFindCityState(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void CallFindCityStateAsync(string username, string password, string zip) {
        this.CallFindCityStateAsync(username, password, zip, null);
    }
    
    /// <remarks/>
    public void CallFindCityStateAsync(string username, string password, string zip, object userState) {
        if ((this.CallFindCityStateOperationCompleted == null)) {
            this.CallFindCityStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallFindCityStateOperationCompleted);
        }
        this.InvokeAsync("CallFindCityState", new object[] {
                    username,
                    password,
                    zip}, this.CallFindCityStateOperationCompleted, userState);
    }
    
    private void OnCallFindCityStateOperationCompleted(object arg) {
        if ((this.CallFindCityStateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CallFindCityStateCompleted(this, new CallFindCityStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/CallFindCityCounty", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode CallFindCityCounty(string username, string password, string zip) {
        object[] results = this.Invoke("CallFindCityCounty", new object[] {
                    username,
                    password,
                    zip});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCallFindCityCounty(string username, string password, string zip, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CallFindCityCounty", new object[] {
                    username,
                    password,
                    zip}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndCallFindCityCounty(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void CallFindCityCountyAsync(string username, string password, string zip) {
        this.CallFindCityCountyAsync(username, password, zip, null);
    }
    
    /// <remarks/>
    public void CallFindCityCountyAsync(string username, string password, string zip, object userState) {
        if ((this.CallFindCityCountyOperationCompleted == null)) {
            this.CallFindCityCountyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallFindCityCountyOperationCompleted);
        }
        this.InvokeAsync("CallFindCityCounty", new object[] {
                    username,
                    password,
                    zip}, this.CallFindCityCountyOperationCompleted, userState);
    }
    
    private void OnCallFindCityCountyOperationCompleted(object arg) {
        if ((this.CallFindCityCountyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CallFindCityCountyCompleted(this, new CallFindCityCountyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/CallFindZipCity", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode CallFindZipCity(string username, string password, string city, string state) {
        object[] results = this.Invoke("CallFindZipCity", new object[] {
                    username,
                    password,
                    city,
                    state});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCallFindZipCity(string username, string password, string city, string state, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CallFindZipCity", new object[] {
                    username,
                    password,
                    city,
                    state}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndCallFindZipCity(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void CallFindZipCityAsync(string username, string password, string city, string state) {
        this.CallFindZipCityAsync(username, password, city, state, null);
    }
    
    /// <remarks/>
    public void CallFindZipCityAsync(string username, string password, string city, string state, object userState) {
        if ((this.CallFindZipCityOperationCompleted == null)) {
            this.CallFindZipCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallFindZipCityOperationCompleted);
        }
        this.InvokeAsync("CallFindZipCity", new object[] {
                    username,
                    password,
                    city,
                    state}, this.CallFindZipCityOperationCompleted, userState);
    }
    
    private void OnCallFindZipCityOperationCompleted(object arg) {
        if ((this.CallFindZipCityCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CallFindZipCityCompleted(this, new CallFindZipCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/TigerCA", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode TigerCA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes) {
        object[] results = this.Invoke("TigerCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTigerCA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TigerCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndTigerCA(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void TigerCAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes) {
        this.TigerCAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, null);
    }
    
    /// <remarks/>
    public void TigerCAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, object userState) {
        if ((this.TigerCAOperationCompleted == null)) {
            this.TigerCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTigerCAOperationCompleted);
        }
        this.InvokeAsync("TigerCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes}, this.TigerCAOperationCompleted, userState);
    }
    
    private void OnTigerCAOperationCompleted(object arg) {
        if ((this.TigerCACompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TigerCACompleted(this, new TigerCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/wsTigerCA", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode wsTigerCA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname) {
        object[] results = this.Invoke("wsTigerCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes,
                    ca_filler,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginwsTigerCA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("wsTigerCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes,
                    ca_filler,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndwsTigerCA(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void wsTigerCAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname) {
        this.wsTigerCAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname, null);
    }
    
    /// <remarks/>
    public void wsTigerCAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname, object userState) {
        if ((this.wsTigerCAOperationCompleted == null)) {
            this.wsTigerCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsTigerCAOperationCompleted);
        }
        this.InvokeAsync("wsTigerCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes,
                    ca_filler,
                    batchname}, this.wsTigerCAOperationCompleted, userState);
    }
    
    private void OnwsTigerCAOperationCompleted(object arg) {
        if ((this.wsTigerCACompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.wsTigerCACompleted(this, new wsTigerCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/callCA", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode callCA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        object[] results = this.Invoke("callCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincallCA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("callCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndcallCA(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void callCAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        this.callCAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, mixedcase, batchname, null);
    }
    
    /// <remarks/>
    public void callCAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, object userState) {
        if ((this.callCAOperationCompleted == null)) {
            this.callCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallCAOperationCompleted);
        }
        this.InvokeAsync("callCA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, this.callCAOperationCompleted, userState);
    }
    
    private void OncallCAOperationCompleted(object arg) {
        if ((this.callCACompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.callCACompleted(this, new callCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/callCA2", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode callCA2(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        object[] results = this.Invoke("callCA2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincallCA2(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("callCA2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndcallCA2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void callCA2Async(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        this.callCA2Async(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, mixedcase, batchname, null);
    }
    
    /// <remarks/>
    public void callCA2Async(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, object userState) {
        if ((this.callCA2OperationCompleted == null)) {
            this.callCA2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncallCA2OperationCompleted);
        }
        this.InvokeAsync("callCA2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, this.callCA2OperationCompleted, userState);
    }
    
    private void OncallCA2OperationCompleted(object arg) {
        if ((this.callCA2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.callCA2Completed(this, new callCA2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/CorrectA", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode CorrectA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        object[] results = this.Invoke("CorrectA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCorrectA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CorrectA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndCorrectA(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void CorrectAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        this.CorrectAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, mixedcase, batchname, null);
    }
    
    /// <remarks/>
    public void CorrectAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, object userState) {
        if ((this.CorrectAOperationCompleted == null)) {
            this.CorrectAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCorrectAOperationCompleted);
        }
        this.InvokeAsync("CorrectA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, this.CorrectAOperationCompleted, userState);
    }
    
    private void OnCorrectAOperationCompleted(object arg) {
        if ((this.CorrectACompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CorrectACompleted(this, new CorrectACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/wsCorrectA", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode wsCorrectA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname) {
        object[] results = this.Invoke("wsCorrectA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes,
                    ca_filler,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginwsCorrectA(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("wsCorrectA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes,
                    ca_filler,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndwsCorrectA(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void wsCorrectAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname) {
        this.wsCorrectAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname, null);
    }
    
    /// <remarks/>
    public void wsCorrectAAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, string ca_codes, string ca_filler, string batchname, object userState) {
        if ((this.wsCorrectAOperationCompleted == null)) {
            this.wsCorrectAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsCorrectAOperationCompleted);
        }
        this.InvokeAsync("wsCorrectA", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    ca_codes,
                    ca_filler,
                    batchname}, this.wsCorrectAOperationCompleted, userState);
    }
    
    private void OnwsCorrectAOperationCompleted(object arg) {
        if ((this.wsCorrectACompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.wsCorrectACompleted(this, new wsCorrectACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/correctA2", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode correctA2(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        object[] results = this.Invoke("correctA2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincorrectA2(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("correctA2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndcorrectA2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void correctA2Async(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        this.correctA2Async(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, mixedcase, batchname, null);
    }
    
    /// <remarks/>
    public void correctA2Async(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, object userState) {
        if ((this.correctA2OperationCompleted == null)) {
            this.correctA2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncorrectA2OperationCompleted);
        }
        this.InvokeAsync("correctA2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, this.correctA2OperationCompleted, userState);
    }
    
    private void OncorrectA2OperationCompleted(object arg) {
        if ((this.correctA2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.correctA2Completed(this, new correctA2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/callCAstd", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode callCAstd(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        object[] results = this.Invoke("callCAstd", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincallCAstd(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("callCAstd", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndcallCAstd(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void callCAstdAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname) {
        this.callCAstdAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, mixedcase, batchname, null);
    }
    
    /// <remarks/>
    public void callCAstdAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, bool mixedcase, string batchname, object userState) {
        if ((this.callCAstdOperationCompleted == null)) {
            this.callCAstdOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallCAstdOperationCompleted);
        }
        this.InvokeAsync("callCAstd", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip,
                    mixedcase,
                    batchname}, this.callCAstdOperationCompleted, userState);
    }
    
    private void OncallCAstdOperationCompleted(object arg) {
        if ((this.callCAstdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.callCAstdCompleted(this, new callCAstdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/CallStreetSearch", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode CallStreetSearch(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip) {
        object[] results = this.Invoke("CallStreetSearch", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCallStreetSearch(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CallStreetSearch", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndCallStreetSearch(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void CallStreetSearchAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip) {
        this.CallStreetSearchAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, null);
    }
    
    /// <remarks/>
    public void CallStreetSearchAsync(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, object userState) {
        if ((this.CallStreetSearchOperationCompleted == null)) {
            this.CallStreetSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallStreetSearchOperationCompleted);
        }
        this.InvokeAsync("CallStreetSearch", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip}, this.CallStreetSearchOperationCompleted, userState);
    }
    
    private void OnCallStreetSearchOperationCompleted(object arg) {
        if ((this.CallStreetSearchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CallStreetSearchCompleted(this, new CallStreetSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/CallStreetSearch2", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode CallStreetSearch2(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip) {
        object[] results = this.Invoke("CallStreetSearch2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCallStreetSearch2(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CallStreetSearch2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndCallStreetSearch2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void CallStreetSearch2Async(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip) {
        this.CallStreetSearch2Async(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, null);
    }
    
    /// <remarks/>
    public void CallStreetSearch2Async(string username, string password, string firmname, string urbanization, string delivery_line_1, string delivery_line_2, string city_state_zip, object userState) {
        if ((this.CallStreetSearch2OperationCompleted == null)) {
            this.CallStreetSearch2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallStreetSearch2OperationCompleted);
        }
        this.InvokeAsync("CallStreetSearch2", new object[] {
                    username,
                    password,
                    firmname,
                    urbanization,
                    delivery_line_1,
                    delivery_line_2,
                    city_state_zip}, this.CallStreetSearch2OperationCompleted, userState);
    }
    
    private void OnCallStreetSearch2OperationCompleted(object arg) {
        if ((this.CallStreetSearch2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CallStreetSearch2Completed(this, new CallStreetSearch2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/CreateBatch", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool CreateBatch(string username, string password, string batchname) {
        object[] results = this.Invoke("CreateBatch", new object[] {
                    username,
                    password,
                    batchname});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateBatch(string username, string password, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateBatch", new object[] {
                    username,
                    password,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndCreateBatch(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void CreateBatchAsync(string username, string password, string batchname) {
        this.CreateBatchAsync(username, password, batchname, null);
    }
    
    /// <remarks/>
    public void CreateBatchAsync(string username, string password, string batchname, object userState) {
        if ((this.CreateBatchOperationCompleted == null)) {
            this.CreateBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBatchOperationCompleted);
        }
        this.InvokeAsync("CreateBatch", new object[] {
                    username,
                    password,
                    batchname}, this.CreateBatchOperationCompleted, userState);
    }
    
    private void OnCreateBatchOperationCompleted(object arg) {
        if ((this.CreateBatchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateBatchCompleted(this, new CreateBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/DeleteBatch", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool DeleteBatch(string username, string password, string batchname) {
        object[] results = this.Invoke("DeleteBatch", new object[] {
                    username,
                    password,
                    batchname});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteBatch(string username, string password, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteBatch", new object[] {
                    username,
                    password,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndDeleteBatch(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteBatchAsync(string username, string password, string batchname) {
        this.DeleteBatchAsync(username, password, batchname, null);
    }
    
    /// <remarks/>
    public void DeleteBatchAsync(string username, string password, string batchname, object userState) {
        if ((this.DeleteBatchOperationCompleted == null)) {
            this.DeleteBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBatchOperationCompleted);
        }
        this.InvokeAsync("DeleteBatch", new object[] {
                    username,
                    password,
                    batchname}, this.DeleteBatchOperationCompleted, userState);
    }
    
    private void OnDeleteBatchOperationCompleted(object arg) {
        if ((this.DeleteBatchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteBatchCompleted(this, new DeleteBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/getPS3553form", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getPS3553form(string username, string password, string batchname) {
        object[] results = this.Invoke("getPS3553form", new object[] {
                    username,
                    password,
                    batchname});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPS3553form(string username, string password, string batchname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPS3553form", new object[] {
                    username,
                    password,
                    batchname}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndgetPS3553form(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void getPS3553formAsync(string username, string password, string batchname) {
        this.getPS3553formAsync(username, password, batchname, null);
    }
    
    /// <remarks/>
    public void getPS3553formAsync(string username, string password, string batchname, object userState) {
        if ((this.getPS3553formOperationCompleted == null)) {
            this.getPS3553formOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPS3553formOperationCompleted);
        }
        this.InvokeAsync("getPS3553form", new object[] {
                    username,
                    password,
                    batchname}, this.getPS3553formOperationCompleted, userState);
    }
    
    private void OngetPS3553formOperationCompleted(object arg) {
        if ((this.getPS3553formCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPS3553formCompleted(this, new getPS3553formCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.name-searching.com/CaddressASP/getBatchList", RequestNamespace="http://www.name-searching.com/CaddressASP/", ResponseNamespace="http://www.name-searching.com/CaddressASP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getBatchList(string username, string password) {
        object[] results = this.Invoke("getBatchList", new object[] {
                    username,
                    password});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetBatchList(string username, string password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getBatchList", new object[] {
                    username,
                    password}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndgetBatchList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void getBatchListAsync(string username, string password) {
        this.getBatchListAsync(username, password, null);
    }
    
    /// <remarks/>
    public void getBatchListAsync(string username, string password, object userState) {
        if ((this.getBatchListOperationCompleted == null)) {
            this.getBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchListOperationCompleted);
        }
        this.InvokeAsync("getBatchList", new object[] {
                    username,
                    password}, this.getBatchListOperationCompleted, userState);
    }
    
    private void OngetBatchListOperationCompleted(object arg) {
        if ((this.getBatchListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getBatchListCompleted(this, new getBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getAccountInfoCompletedEventHandler(object sender, getAccountInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getAccountAccessCompletedEventHandler(object sender, getAccountAccessCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAccountAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAccountAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CallFindCityStateCompletedEventHandler(object sender, CallFindCityStateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CallFindCityStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CallFindCityStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CallFindCityCountyCompletedEventHandler(object sender, CallFindCityCountyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CallFindCityCountyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CallFindCityCountyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CallFindZipCityCompletedEventHandler(object sender, CallFindZipCityCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CallFindZipCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CallFindZipCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void TigerCACompletedEventHandler(object sender, TigerCACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TigerCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TigerCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void wsTigerCACompletedEventHandler(object sender, wsTigerCACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class wsTigerCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal wsTigerCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void callCACompletedEventHandler(object sender, callCACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class callCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal callCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void callCA2CompletedEventHandler(object sender, callCA2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class callCA2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal callCA2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CorrectACompletedEventHandler(object sender, CorrectACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CorrectACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CorrectACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void wsCorrectACompletedEventHandler(object sender, wsCorrectACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class wsCorrectACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal wsCorrectACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void correctA2CompletedEventHandler(object sender, correctA2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class correctA2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal correctA2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void callCAstdCompletedEventHandler(object sender, callCAstdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class callCAstdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal callCAstdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CallStreetSearchCompletedEventHandler(object sender, CallStreetSearchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CallStreetSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CallStreetSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CallStreetSearch2CompletedEventHandler(object sender, CallStreetSearch2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CallStreetSearch2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CallStreetSearch2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CreateBatchCompletedEventHandler(object sender, CreateBatchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void DeleteBatchCompletedEventHandler(object sender, DeleteBatchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getPS3553formCompletedEventHandler(object sender, getPS3553formCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPS3553formCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPS3553formCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getBatchListCompletedEventHandler(object sender, getBatchListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}
