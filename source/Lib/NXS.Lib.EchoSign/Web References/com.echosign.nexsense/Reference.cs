//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace NXS.Lib.EchoSign.com.echosign.nexsense {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EchoSignDocumentService19HttpBinding", Namespace="http://api.echosign")]
    public partial class EchoSignDocumentService19 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback cancelDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEmbeddedWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback createGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLibraryDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPersonalEmbeddedWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPersonalUrlWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback createUrlWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback createUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback delegateSigningOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback deliverDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuditTrailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getComposeDocumentUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentByVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentEventsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentImageUrlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentInfosByExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentPagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentUrlByVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentUrlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmbeddedViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupsInAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImagesByVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatestDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatestDocumentUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatestImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLibraryDocumentsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMegaSignDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMyDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMyLibraryDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMyWidgetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSignerFormFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSigningUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupportingDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersInAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWidgetsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback initiateInteractiveSendDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveUsersToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback notifyDocumentVaultedOperationCompleted;
        
        private System.Threading.SendOrPostCallback personalizeEmbeddedWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback personalizeUrlWidgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback rejectDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback replaceSignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchUserDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDocumentInteractiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDocumentMegaSignOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback testEchoFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback testPingOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyUserOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EchoSignDocumentService19() {
            this.Url = global::NXS.Lib.EchoSign.Properties.Settings.Default.NXS_Lib_EchoSign_com_echosign_nexsense_EchoSignDocumentService19;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event cancelDocumentCompletedEventHandler cancelDocumentCompleted;
        
        /// <remarks/>
        public event createAccountCompletedEventHandler createAccountCompleted;
        
        /// <remarks/>
        public event createEmbeddedWidgetCompletedEventHandler createEmbeddedWidgetCompleted;
        
        /// <remarks/>
        public event createFormCompletedEventHandler createFormCompleted;
        
        /// <remarks/>
        public event createGroupCompletedEventHandler createGroupCompleted;
        
        /// <remarks/>
        public event createLibraryDocumentCompletedEventHandler createLibraryDocumentCompleted;
        
        /// <remarks/>
        public event createPersonalEmbeddedWidgetCompletedEventHandler createPersonalEmbeddedWidgetCompleted;
        
        /// <remarks/>
        public event createPersonalUrlWidgetCompletedEventHandler createPersonalUrlWidgetCompleted;
        
        /// <remarks/>
        public event createUrlWidgetCompletedEventHandler createUrlWidgetCompleted;
        
        /// <remarks/>
        public event createUserCompletedEventHandler createUserCompleted;
        
        /// <remarks/>
        public event delegateSigningCompletedEventHandler delegateSigningCompleted;
        
        /// <remarks/>
        public event deleteGroupCompletedEventHandler deleteGroupCompleted;
        
        /// <remarks/>
        public event deliverDocumentCompletedEventHandler deliverDocumentCompleted;
        
        /// <remarks/>
        public event disableWidgetCompletedEventHandler disableWidgetCompleted;
        
        /// <remarks/>
        public event enableWidgetCompletedEventHandler enableWidgetCompleted;
        
        /// <remarks/>
        public event getAuditTrailCompletedEventHandler getAuditTrailCompleted;
        
        /// <remarks/>
        public event getComposeDocumentUrlCompletedEventHandler getComposeDocumentUrlCompleted;
        
        /// <remarks/>
        public event getDocumentByVersionCompletedEventHandler getDocumentByVersionCompleted;
        
        /// <remarks/>
        public event getDocumentEventsForUserCompletedEventHandler getDocumentEventsForUserCompleted;
        
        /// <remarks/>
        public event getDocumentImageUrlsCompletedEventHandler getDocumentImageUrlsCompleted;
        
        /// <remarks/>
        public event getDocumentInfoCompletedEventHandler getDocumentInfoCompleted;
        
        /// <remarks/>
        public event getDocumentInfosByExternalIdCompletedEventHandler getDocumentInfosByExternalIdCompleted;
        
        /// <remarks/>
        public event getDocumentPagesInfoCompletedEventHandler getDocumentPagesInfoCompleted;
        
        /// <remarks/>
        public event getDocumentUrlByVersionCompletedEventHandler getDocumentUrlByVersionCompleted;
        
        /// <remarks/>
        public event getDocumentUrlsCompletedEventHandler getDocumentUrlsCompleted;
        
        /// <remarks/>
        public event getDocumentsCompletedEventHandler getDocumentsCompleted;
        
        /// <remarks/>
        public event getDocumentsForUserCompletedEventHandler getDocumentsForUserCompleted;
        
        /// <remarks/>
        public event getEmbeddedViewCompletedEventHandler getEmbeddedViewCompleted;
        
        /// <remarks/>
        public event getFormDataCompletedEventHandler getFormDataCompleted;
        
        /// <remarks/>
        public event getGroupsInAccountCompletedEventHandler getGroupsInAccountCompleted;
        
        /// <remarks/>
        public event getImagesByVersionCompletedEventHandler getImagesByVersionCompleted;
        
        /// <remarks/>
        public event getLatestDocumentCompletedEventHandler getLatestDocumentCompleted;
        
        /// <remarks/>
        public event getLatestDocumentUrlCompletedEventHandler getLatestDocumentUrlCompleted;
        
        /// <remarks/>
        public event getLatestImagesCompletedEventHandler getLatestImagesCompleted;
        
        /// <remarks/>
        public event getLibraryDocumentsForUserCompletedEventHandler getLibraryDocumentsForUserCompleted;
        
        /// <remarks/>
        public event getMegaSignDocumentCompletedEventHandler getMegaSignDocumentCompleted;
        
        /// <remarks/>
        public event getMyDocumentsCompletedEventHandler getMyDocumentsCompleted;
        
        /// <remarks/>
        public event getMyLibraryDocumentsCompletedEventHandler getMyLibraryDocumentsCompleted;
        
        /// <remarks/>
        public event getMyWidgetsCompletedEventHandler getMyWidgetsCompleted;
        
        /// <remarks/>
        public event getSignerFormFieldsCompletedEventHandler getSignerFormFieldsCompleted;
        
        /// <remarks/>
        public event getSigningUrlCompletedEventHandler getSigningUrlCompleted;
        
        /// <remarks/>
        public event getSupportingDocumentsCompletedEventHandler getSupportingDocumentsCompleted;
        
        /// <remarks/>
        public event getUserDocumentsCompletedEventHandler getUserDocumentsCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event getUsersInAccountCompletedEventHandler getUsersInAccountCompleted;
        
        /// <remarks/>
        public event getUsersInGroupCompletedEventHandler getUsersInGroupCompleted;
        
        /// <remarks/>
        public event getWidgetsForUserCompletedEventHandler getWidgetsForUserCompleted;
        
        /// <remarks/>
        public event initiateInteractiveSendDocumentCompletedEventHandler initiateInteractiveSendDocumentCompleted;
        
        /// <remarks/>
        public event moveUsersToGroupCompletedEventHandler moveUsersToGroupCompleted;
        
        /// <remarks/>
        public event notifyDocumentVaultedCompletedEventHandler notifyDocumentVaultedCompleted;
        
        /// <remarks/>
        public event personalizeEmbeddedWidgetCompletedEventHandler personalizeEmbeddedWidgetCompleted;
        
        /// <remarks/>
        public event personalizeUrlWidgetCompletedEventHandler personalizeUrlWidgetCompleted;
        
        /// <remarks/>
        public event rejectDocumentCompletedEventHandler rejectDocumentCompleted;
        
        /// <remarks/>
        public event removeDocumentCompletedEventHandler removeDocumentCompleted;
        
        /// <remarks/>
        public event renameGroupCompletedEventHandler renameGroupCompleted;
        
        /// <remarks/>
        public event replaceSignerCompletedEventHandler replaceSignerCompleted;
        
        /// <remarks/>
        public event searchUserDocumentsCompletedEventHandler searchUserDocumentsCompleted;
        
        /// <remarks/>
        public event sendDocumentCompletedEventHandler sendDocumentCompleted;
        
        /// <remarks/>
        public event sendDocumentInteractiveCompletedEventHandler sendDocumentInteractiveCompleted;
        
        /// <remarks/>
        public event sendDocumentMegaSignCompletedEventHandler sendDocumentMegaSignCompleted;
        
        /// <remarks/>
        public event sendReminderCompletedEventHandler sendReminderCompleted;
        
        /// <remarks/>
        public event testEchoFileCompletedEventHandler testEchoFileCompleted;
        
        /// <remarks/>
        public event testPingCompletedEventHandler testPingCompleted;
        
        /// <remarks/>
        public event verifyUserCompletedEventHandler verifyUserCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CancelDocumentResult cancelDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string comment, bool notifySigner) {
            object[] results = this.Invoke("cancelDocument", new object[] {
                        apiKey,
                        documentKey,
                        comment,
                        notifySigner});
            return ((CancelDocumentResult)(results[0]));
        }
        
        /// <remarks/>
        public void cancelDocumentAsync(string apiKey, string documentKey, string comment, bool notifySigner) {
            this.cancelDocumentAsync(apiKey, documentKey, comment, notifySigner, null);
        }
        
        /// <remarks/>
        public void cancelDocumentAsync(string apiKey, string documentKey, string comment, bool notifySigner, object userState) {
            if ((this.cancelDocumentOperationCompleted == null)) {
                this.cancelDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelDocumentOperationCompleted);
            }
            this.InvokeAsync("cancelDocument", new object[] {
                        apiKey,
                        documentKey,
                        comment,
                        notifySigner}, this.cancelDocumentOperationCompleted, userState);
        }
        
        private void OncancelDocumentOperationCompleted(object arg) {
            if ((this.cancelDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelDocumentCompleted(this, new cancelDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateAccountResult createAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCreationInfo userCreationInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AccountCreationInfo accountCreationInfo) {
            object[] results = this.Invoke("createAccount", new object[] {
                        apiKey,
                        userCreationInfo,
                        accountCreationInfo});
            return ((CreateAccountResult)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountAsync(string apiKey, UserCreationInfo userCreationInfo, AccountCreationInfo accountCreationInfo) {
            this.createAccountAsync(apiKey, userCreationInfo, accountCreationInfo, null);
        }
        
        /// <remarks/>
        public void createAccountAsync(string apiKey, UserCreationInfo userCreationInfo, AccountCreationInfo accountCreationInfo, object userState) {
            if ((this.createAccountOperationCompleted == null)) {
                this.createAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountOperationCompleted);
            }
            this.InvokeAsync("createAccount", new object[] {
                        apiKey,
                        userCreationInfo,
                        accountCreationInfo}, this.createAccountOperationCompleted, userState);
        }
        
        private void OncreateAccountOperationCompleted(object arg) {
            if ((this.createAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountCompleted(this, new createAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("embeddedWidgetCreationResult", IsNullable=true)]
        public EmbeddedWidgetCreationResult createEmbeddedWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetCreationInfo widgetInfo) {
            object[] results = this.Invoke("createEmbeddedWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo});
            return ((EmbeddedWidgetCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void createEmbeddedWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo) {
            this.createEmbeddedWidgetAsync(apiKey, senderInfo, widgetInfo, null);
        }
        
        /// <remarks/>
        public void createEmbeddedWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo, object userState) {
            if ((this.createEmbeddedWidgetOperationCompleted == null)) {
                this.createEmbeddedWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmbeddedWidgetOperationCompleted);
            }
            this.InvokeAsync("createEmbeddedWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo}, this.createEmbeddedWidgetOperationCompleted, userState);
        }
        
        private void OncreateEmbeddedWidgetOperationCompleted(object arg) {
            if ((this.createEmbeddedWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmbeddedWidgetCompleted(this, new createEmbeddedWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("formCreationResult", IsNullable=true)]
        public FormCreationResult createForm([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FormCreationInfo formInfo) {
            object[] results = this.Invoke("createForm", new object[] {
                        apiKey,
                        senderInfo,
                        formInfo});
            return ((FormCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void createFormAsync(string apiKey, SenderInfo senderInfo, FormCreationInfo formInfo) {
            this.createFormAsync(apiKey, senderInfo, formInfo, null);
        }
        
        /// <remarks/>
        public void createFormAsync(string apiKey, SenderInfo senderInfo, FormCreationInfo formInfo, object userState) {
            if ((this.createFormOperationCompleted == null)) {
                this.createFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFormOperationCompleted);
            }
            this.InvokeAsync("createForm", new object[] {
                        apiKey,
                        senderInfo,
                        formInfo}, this.createFormOperationCompleted, userState);
        }
        
        private void OncreateFormOperationCompleted(object arg) {
            if ((this.createFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFormCompleted(this, new createFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateGroupResult createGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string groupName) {
            object[] results = this.Invoke("createGroup", new object[] {
                        apiKey,
                        groupName});
            return ((CreateGroupResult)(results[0]));
        }
        
        /// <remarks/>
        public void createGroupAsync(string apiKey, string groupName) {
            this.createGroupAsync(apiKey, groupName, null);
        }
        
        /// <remarks/>
        public void createGroupAsync(string apiKey, string groupName, object userState) {
            if ((this.createGroupOperationCompleted == null)) {
                this.createGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateGroupOperationCompleted);
            }
            this.InvokeAsync("createGroup", new object[] {
                        apiKey,
                        groupName}, this.createGroupOperationCompleted, userState);
        }
        
        private void OncreateGroupOperationCompleted(object arg) {
            if ((this.createGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createGroupCompleted(this, new createGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("libraryDocumentCreationResult", IsNullable=true)]
        public LibraryDocumentCreationResult createLibraryDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] LibraryDocumentCreationInfo libraryDocumentCreationInfo) {
            object[] results = this.Invoke("createLibraryDocument", new object[] {
                        apiKey,
                        senderInfo,
                        libraryDocumentCreationInfo});
            return ((LibraryDocumentCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void createLibraryDocumentAsync(string apiKey, SenderInfo senderInfo, LibraryDocumentCreationInfo libraryDocumentCreationInfo) {
            this.createLibraryDocumentAsync(apiKey, senderInfo, libraryDocumentCreationInfo, null);
        }
        
        /// <remarks/>
        public void createLibraryDocumentAsync(string apiKey, SenderInfo senderInfo, LibraryDocumentCreationInfo libraryDocumentCreationInfo, object userState) {
            if ((this.createLibraryDocumentOperationCompleted == null)) {
                this.createLibraryDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLibraryDocumentOperationCompleted);
            }
            this.InvokeAsync("createLibraryDocument", new object[] {
                        apiKey,
                        senderInfo,
                        libraryDocumentCreationInfo}, this.createLibraryDocumentOperationCompleted, userState);
        }
        
        private void OncreateLibraryDocumentOperationCompleted(object arg) {
            if ((this.createLibraryDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLibraryDocumentCompleted(this, new createLibraryDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("embeddedWidgetCreationResult", IsNullable=true)]
        public EmbeddedWidgetCreationResult createPersonalEmbeddedWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetCreationInfo widgetInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetPersonalizationInfo personalizationInfo) {
            object[] results = this.Invoke("createPersonalEmbeddedWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo,
                        personalizationInfo});
            return ((EmbeddedWidgetCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void createPersonalEmbeddedWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo, WidgetPersonalizationInfo personalizationInfo) {
            this.createPersonalEmbeddedWidgetAsync(apiKey, senderInfo, widgetInfo, personalizationInfo, null);
        }
        
        /// <remarks/>
        public void createPersonalEmbeddedWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo, WidgetPersonalizationInfo personalizationInfo, object userState) {
            if ((this.createPersonalEmbeddedWidgetOperationCompleted == null)) {
                this.createPersonalEmbeddedWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePersonalEmbeddedWidgetOperationCompleted);
            }
            this.InvokeAsync("createPersonalEmbeddedWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo,
                        personalizationInfo}, this.createPersonalEmbeddedWidgetOperationCompleted, userState);
        }
        
        private void OncreatePersonalEmbeddedWidgetOperationCompleted(object arg) {
            if ((this.createPersonalEmbeddedWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPersonalEmbeddedWidgetCompleted(this, new createPersonalEmbeddedWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("urlWidgetCreationResult", IsNullable=true)]
        public UrlWidgetCreationResult createPersonalUrlWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetCreationInfo widgetInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetPersonalizationInfo personalizationInfo) {
            object[] results = this.Invoke("createPersonalUrlWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo,
                        personalizationInfo});
            return ((UrlWidgetCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void createPersonalUrlWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo, WidgetPersonalizationInfo personalizationInfo) {
            this.createPersonalUrlWidgetAsync(apiKey, senderInfo, widgetInfo, personalizationInfo, null);
        }
        
        /// <remarks/>
        public void createPersonalUrlWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo, WidgetPersonalizationInfo personalizationInfo, object userState) {
            if ((this.createPersonalUrlWidgetOperationCompleted == null)) {
                this.createPersonalUrlWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePersonalUrlWidgetOperationCompleted);
            }
            this.InvokeAsync("createPersonalUrlWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo,
                        personalizationInfo}, this.createPersonalUrlWidgetOperationCompleted, userState);
        }
        
        private void OncreatePersonalUrlWidgetOperationCompleted(object arg) {
            if ((this.createPersonalUrlWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPersonalUrlWidgetCompleted(this, new createPersonalUrlWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("urlWidgetCreationResult", IsNullable=true)]
        public UrlWidgetCreationResult createUrlWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetCreationInfo widgetInfo) {
            object[] results = this.Invoke("createUrlWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo});
            return ((UrlWidgetCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void createUrlWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo) {
            this.createUrlWidgetAsync(apiKey, senderInfo, widgetInfo, null);
        }
        
        /// <remarks/>
        public void createUrlWidgetAsync(string apiKey, SenderInfo senderInfo, WidgetCreationInfo widgetInfo, object userState) {
            if ((this.createUrlWidgetOperationCompleted == null)) {
                this.createUrlWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateUrlWidgetOperationCompleted);
            }
            this.InvokeAsync("createUrlWidget", new object[] {
                        apiKey,
                        senderInfo,
                        widgetInfo}, this.createUrlWidgetOperationCompleted, userState);
        }
        
        private void OncreateUrlWidgetOperationCompleted(object arg) {
            if ((this.createUrlWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createUrlWidgetCompleted(this, new createUrlWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("userKey", IsNullable=true)]
        public string createUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCreationInfo userInfo) {
            object[] results = this.Invoke("createUser", new object[] {
                        apiKey,
                        userInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createUserAsync(string apiKey, UserCreationInfo userInfo) {
            this.createUserAsync(apiKey, userInfo, null);
        }
        
        /// <remarks/>
        public void createUserAsync(string apiKey, UserCreationInfo userInfo, object userState) {
            if ((this.createUserOperationCompleted == null)) {
                this.createUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateUserOperationCompleted);
            }
            this.InvokeAsync("createUser", new object[] {
                        apiKey,
                        userInfo}, this.createUserOperationCompleted, userState);
        }
        
        private void OncreateUserOperationCompleted(object arg) {
            if ((this.createUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createUserCompleted(this, new createUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DelegateSigningResult delegateSigning([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DelegateSigningOptions delegateSigningOptions) {
            object[] results = this.Invoke("delegateSigning", new object[] {
                        apiKey,
                        userCredentials,
                        documentKey,
                        delegateSigningOptions});
            return ((DelegateSigningResult)(results[0]));
        }
        
        /// <remarks/>
        public void delegateSigningAsync(string apiKey, UserCredentials userCredentials, string documentKey, DelegateSigningOptions delegateSigningOptions) {
            this.delegateSigningAsync(apiKey, userCredentials, documentKey, delegateSigningOptions, null);
        }
        
        /// <remarks/>
        public void delegateSigningAsync(string apiKey, UserCredentials userCredentials, string documentKey, DelegateSigningOptions delegateSigningOptions, object userState) {
            if ((this.delegateSigningOperationCompleted == null)) {
                this.delegateSigningOperationCompleted = new System.Threading.SendOrPostCallback(this.OndelegateSigningOperationCompleted);
            }
            this.InvokeAsync("delegateSigning", new object[] {
                        apiKey,
                        userCredentials,
                        documentKey,
                        delegateSigningOptions}, this.delegateSigningOperationCompleted, userState);
        }
        
        private void OndelegateSigningOperationCompleted(object arg) {
            if ((this.delegateSigningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delegateSigningCompleted(this, new delegateSigningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeleteGroupResult deleteGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string groupKey) {
            object[] results = this.Invoke("deleteGroup", new object[] {
                        apiKey,
                        groupKey});
            return ((DeleteGroupResult)(results[0]));
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string apiKey, string groupKey) {
            this.deleteGroupAsync(apiKey, groupKey, null);
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string apiKey, string groupKey, object userState) {
            if ((this.deleteGroupOperationCompleted == null)) {
                this.deleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGroupOperationCompleted);
            }
            this.InvokeAsync("deleteGroup", new object[] {
                        apiKey,
                        groupKey}, this.deleteGroupOperationCompleted, userState);
        }
        
        private void OndeleteGroupOperationCompleted(object arg) {
            if ((this.deleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGroupCompleted(this, new deleteGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeliverDocumentResult", IsNullable=true)]
        public DeliverDocumentResult deliverDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FileInfo fileInfo) {
            object[] results = this.Invoke("deliverDocument", new object[] {
                        apiKey,
                        fileInfo});
            return ((DeliverDocumentResult)(results[0]));
        }
        
        /// <remarks/>
        public void deliverDocumentAsync(string apiKey, FileInfo fileInfo) {
            this.deliverDocumentAsync(apiKey, fileInfo, null);
        }
        
        /// <remarks/>
        public void deliverDocumentAsync(string apiKey, FileInfo fileInfo, object userState) {
            if ((this.deliverDocumentOperationCompleted == null)) {
                this.deliverDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeliverDocumentOperationCompleted);
            }
            this.InvokeAsync("deliverDocument", new object[] {
                        apiKey,
                        fileInfo}, this.deliverDocumentOperationCompleted, userState);
        }
        
        private void OndeliverDocumentOperationCompleted(object arg) {
            if ((this.deliverDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deliverDocumentCompleted(this, new deliverDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public DisableWidgetResult disableWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DisableWidgetOptions options) {
            object[] results = this.Invoke("disableWidget", new object[] {
                        apiKey,
                        documentKey,
                        options});
            return ((DisableWidgetResult)(results[0]));
        }
        
        /// <remarks/>
        public void disableWidgetAsync(string apiKey, string documentKey, DisableWidgetOptions options) {
            this.disableWidgetAsync(apiKey, documentKey, options, null);
        }
        
        /// <remarks/>
        public void disableWidgetAsync(string apiKey, string documentKey, DisableWidgetOptions options, object userState) {
            if ((this.disableWidgetOperationCompleted == null)) {
                this.disableWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableWidgetOperationCompleted);
            }
            this.InvokeAsync("disableWidget", new object[] {
                        apiKey,
                        documentKey,
                        options}, this.disableWidgetOperationCompleted, userState);
        }
        
        private void OndisableWidgetOperationCompleted(object arg) {
            if ((this.disableWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableWidgetCompleted(this, new disableWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public EnableWidgetResult enableWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] EnableWidgetOptions options) {
            object[] results = this.Invoke("enableWidget", new object[] {
                        apiKey,
                        documentKey,
                        options});
            return ((EnableWidgetResult)(results[0]));
        }
        
        /// <remarks/>
        public void enableWidgetAsync(string apiKey, string documentKey, EnableWidgetOptions options) {
            this.enableWidgetAsync(apiKey, documentKey, options, null);
        }
        
        /// <remarks/>
        public void enableWidgetAsync(string apiKey, string documentKey, EnableWidgetOptions options, object userState) {
            if ((this.enableWidgetOperationCompleted == null)) {
                this.enableWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableWidgetOperationCompleted);
            }
            this.InvokeAsync("enableWidget", new object[] {
                        apiKey,
                        documentKey,
                        options}, this.enableWidgetOperationCompleted, userState);
        }
        
        private void OnenableWidgetOperationCompleted(object arg) {
            if ((this.enableWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableWidgetCompleted(this, new enableWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AuditTrailResult getAuditTrail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getAuditTrail", new object[] {
                        apiKey,
                        documentKey});
            return ((AuditTrailResult)(results[0]));
        }
        
        /// <remarks/>
        public void getAuditTrailAsync(string apiKey, string documentKey) {
            this.getAuditTrailAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getAuditTrailAsync(string apiKey, string documentKey, object userState) {
            if ((this.getAuditTrailOperationCompleted == null)) {
                this.getAuditTrailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuditTrailOperationCompleted);
            }
            this.InvokeAsync("getAuditTrail", new object[] {
                        apiKey,
                        documentKey}, this.getAuditTrailOperationCompleted, userState);
        }
        
        private void OngetAuditTrailOperationCompleted(object arg) {
            if ((this.getAuditTrailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuditTrailCompleted(this, new getAuditTrailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetComposeDocumentUrlResult getComposeDocumentUrl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accessToken, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ComposeDocumentInfo composeDocumentInfo) {
            object[] results = this.Invoke("getComposeDocumentUrl", new object[] {
                        accessToken,
                        composeDocumentInfo});
            return ((GetComposeDocumentUrlResult)(results[0]));
        }
        
        /// <remarks/>
        public void getComposeDocumentUrlAsync(string accessToken, ComposeDocumentInfo composeDocumentInfo) {
            this.getComposeDocumentUrlAsync(accessToken, composeDocumentInfo, null);
        }
        
        /// <remarks/>
        public void getComposeDocumentUrlAsync(string accessToken, ComposeDocumentInfo composeDocumentInfo, object userState) {
            if ((this.getComposeDocumentUrlOperationCompleted == null)) {
                this.getComposeDocumentUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetComposeDocumentUrlOperationCompleted);
            }
            this.InvokeAsync("getComposeDocumentUrl", new object[] {
                        accessToken,
                        composeDocumentInfo}, this.getComposeDocumentUrlOperationCompleted, userState);
        }
        
        private void OngetComposeDocumentUrlOperationCompleted(object arg) {
            if ((this.getComposeDocumentUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getComposeDocumentUrlCompleted(this, new getComposeDocumentUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pdf", DataType="base64Binary", IsNullable=true)]
        public byte[] getDocumentByVersion([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string versionKey) {
            object[] results = this.Invoke("getDocumentByVersion", new object[] {
                        apiKey,
                        versionKey});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentByVersionAsync(string apiKey, string versionKey) {
            this.getDocumentByVersionAsync(apiKey, versionKey, null);
        }
        
        /// <remarks/>
        public void getDocumentByVersionAsync(string apiKey, string versionKey, object userState) {
            if ((this.getDocumentByVersionOperationCompleted == null)) {
                this.getDocumentByVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentByVersionOperationCompleted);
            }
            this.InvokeAsync("getDocumentByVersion", new object[] {
                        apiKey,
                        versionKey}, this.getDocumentByVersionOperationCompleted, userState);
        }
        
        private void OngetDocumentByVersionOperationCompleted(object arg) {
            if ((this.getDocumentByVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentByVersionCompleted(this, new getDocumentByVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentEventsForUserResult getDocumentEventsForUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentEventsForUserOptions options) {
            object[] results = this.Invoke("getDocumentEventsForUser", new object[] {
                        apiKey,
                        userCredentials,
                        options});
            return ((GetDocumentEventsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentEventsForUserAsync(string apiKey, UserCredentials userCredentials, DocumentEventsForUserOptions options) {
            this.getDocumentEventsForUserAsync(apiKey, userCredentials, options, null);
        }
        
        /// <remarks/>
        public void getDocumentEventsForUserAsync(string apiKey, UserCredentials userCredentials, DocumentEventsForUserOptions options, object userState) {
            if ((this.getDocumentEventsForUserOperationCompleted == null)) {
                this.getDocumentEventsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentEventsForUserOperationCompleted);
            }
            this.InvokeAsync("getDocumentEventsForUser", new object[] {
                        apiKey,
                        userCredentials,
                        options}, this.getDocumentEventsForUserOperationCompleted, userState);
        }
        
        private void OngetDocumentEventsForUserOperationCompleted(object arg) {
            if ((this.getDocumentEventsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentEventsForUserCompleted(this, new getDocumentEventsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentImageUrlsResult getDocumentImageUrls([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentImageUrlsOptions options) {
            object[] results = this.Invoke("getDocumentImageUrls", new object[] {
                        apiKey,
                        documentKey,
                        options});
            return ((GetDocumentImageUrlsResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentImageUrlsAsync(string apiKey, string documentKey, GetDocumentImageUrlsOptions options) {
            this.getDocumentImageUrlsAsync(apiKey, documentKey, options, null);
        }
        
        /// <remarks/>
        public void getDocumentImageUrlsAsync(string apiKey, string documentKey, GetDocumentImageUrlsOptions options, object userState) {
            if ((this.getDocumentImageUrlsOperationCompleted == null)) {
                this.getDocumentImageUrlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentImageUrlsOperationCompleted);
            }
            this.InvokeAsync("getDocumentImageUrls", new object[] {
                        apiKey,
                        documentKey,
                        options}, this.getDocumentImageUrlsOperationCompleted, userState);
        }
        
        private void OngetDocumentImageUrlsOperationCompleted(object arg) {
            if ((this.getDocumentImageUrlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentImageUrlsCompleted(this, new getDocumentImageUrlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("documentInfo", IsNullable=true)]
        public DocumentInfo getDocumentInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getDocumentInfo", new object[] {
                        apiKey,
                        documentKey});
            return ((DocumentInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentInfoAsync(string apiKey, string documentKey) {
            this.getDocumentInfoAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getDocumentInfoAsync(string apiKey, string documentKey, object userState) {
            if ((this.getDocumentInfoOperationCompleted == null)) {
                this.getDocumentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentInfoOperationCompleted);
            }
            this.InvokeAsync("getDocumentInfo", new object[] {
                        apiKey,
                        documentKey}, this.getDocumentInfoOperationCompleted, userState);
        }
        
        private void OngetDocumentInfoOperationCompleted(object arg) {
            if ((this.getDocumentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentInfoCompleted(this, new getDocumentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("documentInfoList", IsNullable=true)]
        public DocumentInfoList getDocumentInfosByExternalId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ExternalId externalId) {
            object[] results = this.Invoke("getDocumentInfosByExternalId", new object[] {
                        apiKey,
                        email,
                        password,
                        externalId});
            return ((DocumentInfoList)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentInfosByExternalIdAsync(string apiKey, string email, string password, ExternalId externalId) {
            this.getDocumentInfosByExternalIdAsync(apiKey, email, password, externalId, null);
        }
        
        /// <remarks/>
        public void getDocumentInfosByExternalIdAsync(string apiKey, string email, string password, ExternalId externalId, object userState) {
            if ((this.getDocumentInfosByExternalIdOperationCompleted == null)) {
                this.getDocumentInfosByExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentInfosByExternalIdOperationCompleted);
            }
            this.InvokeAsync("getDocumentInfosByExternalId", new object[] {
                        apiKey,
                        email,
                        password,
                        externalId}, this.getDocumentInfosByExternalIdOperationCompleted, userState);
        }
        
        private void OngetDocumentInfosByExternalIdOperationCompleted(object arg) {
            if ((this.getDocumentInfosByExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentInfosByExternalIdCompleted(this, new getDocumentInfosByExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentPagesInfoResult getDocumentPagesInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getDocumentPagesInfo", new object[] {
                        apiKey,
                        documentKey});
            return ((GetDocumentPagesInfoResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentPagesInfoAsync(string apiKey, string documentKey) {
            this.getDocumentPagesInfoAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getDocumentPagesInfoAsync(string apiKey, string documentKey, object userState) {
            if ((this.getDocumentPagesInfoOperationCompleted == null)) {
                this.getDocumentPagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentPagesInfoOperationCompleted);
            }
            this.InvokeAsync("getDocumentPagesInfo", new object[] {
                        apiKey,
                        documentKey}, this.getDocumentPagesInfoOperationCompleted, userState);
        }
        
        private void OngetDocumentPagesInfoOperationCompleted(object arg) {
            if ((this.getDocumentPagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentPagesInfoCompleted(this, new getDocumentPagesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("documentUrlResult", IsNullable=true)]
        public DocumentUrlResult getDocumentUrlByVersion([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string versionKey) {
            object[] results = this.Invoke("getDocumentUrlByVersion", new object[] {
                        apiKey,
                        versionKey});
            return ((DocumentUrlResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentUrlByVersionAsync(string apiKey, string versionKey) {
            this.getDocumentUrlByVersionAsync(apiKey, versionKey, null);
        }
        
        /// <remarks/>
        public void getDocumentUrlByVersionAsync(string apiKey, string versionKey, object userState) {
            if ((this.getDocumentUrlByVersionOperationCompleted == null)) {
                this.getDocumentUrlByVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentUrlByVersionOperationCompleted);
            }
            this.InvokeAsync("getDocumentUrlByVersion", new object[] {
                        apiKey,
                        versionKey}, this.getDocumentUrlByVersionOperationCompleted, userState);
        }
        
        private void OngetDocumentUrlByVersionOperationCompleted(object arg) {
            if ((this.getDocumentUrlByVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentUrlByVersionCompleted(this, new getDocumentUrlByVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentUrlsResult getDocumentUrls([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentUrlsOptions options) {
            object[] results = this.Invoke("getDocumentUrls", new object[] {
                        apiKey,
                        documentKey,
                        options});
            return ((GetDocumentUrlsResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentUrlsAsync(string apiKey, string documentKey, GetDocumentUrlsOptions options) {
            this.getDocumentUrlsAsync(apiKey, documentKey, options, null);
        }
        
        /// <remarks/>
        public void getDocumentUrlsAsync(string apiKey, string documentKey, GetDocumentUrlsOptions options, object userState) {
            if ((this.getDocumentUrlsOperationCompleted == null)) {
                this.getDocumentUrlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentUrlsOperationCompleted);
            }
            this.InvokeAsync("getDocumentUrls", new object[] {
                        apiKey,
                        documentKey,
                        options}, this.getDocumentUrlsOperationCompleted, userState);
        }
        
        private void OngetDocumentUrlsOperationCompleted(object arg) {
            if ((this.getDocumentUrlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentUrlsCompleted(this, new getDocumentUrlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentsResult getDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetDocumentsOptions options) {
            object[] results = this.Invoke("getDocuments", new object[] {
                        apiKey,
                        documentKey,
                        options});
            return ((GetDocumentsResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentsAsync(string apiKey, string documentKey, GetDocumentsOptions options) {
            this.getDocumentsAsync(apiKey, documentKey, options, null);
        }
        
        /// <remarks/>
        public void getDocumentsAsync(string apiKey, string documentKey, GetDocumentsOptions options, object userState) {
            if ((this.getDocumentsOperationCompleted == null)) {
                this.getDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentsOperationCompleted);
            }
            this.InvokeAsync("getDocuments", new object[] {
                        apiKey,
                        documentKey,
                        options}, this.getDocumentsOperationCompleted, userState);
        }
        
        private void OngetDocumentsOperationCompleted(object arg) {
            if ((this.getDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentsCompleted(this, new getDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentsForUserResult getDocumentsForUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userKey) {
            object[] results = this.Invoke("getDocumentsForUser", new object[] {
                        apiKey,
                        userKey});
            return ((GetDocumentsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentsForUserAsync(string apiKey, string userKey) {
            this.getDocumentsForUserAsync(apiKey, userKey, null);
        }
        
        /// <remarks/>
        public void getDocumentsForUserAsync(string apiKey, string userKey, object userState) {
            if ((this.getDocumentsForUserOperationCompleted == null)) {
                this.getDocumentsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentsForUserOperationCompleted);
            }
            this.InvokeAsync("getDocumentsForUser", new object[] {
                        apiKey,
                        userKey}, this.getDocumentsForUserOperationCompleted, userState);
        }
        
        private void OngetDocumentsForUserOperationCompleted(object arg) {
            if ((this.getDocumentsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentsForUserCompleted(this, new getDocumentsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetEmbeddedViewResult getEmbeddedView([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accessToken, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OnBehalfOfUser onBehalfOfUser, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] EmbeddedViewOptions embeddedViewOptions) {
            object[] results = this.Invoke("getEmbeddedView", new object[] {
                        accessToken,
                        onBehalfOfUser,
                        embeddedViewOptions});
            return ((GetEmbeddedViewResult)(results[0]));
        }
        
        /// <remarks/>
        public void getEmbeddedViewAsync(string accessToken, OnBehalfOfUser onBehalfOfUser, EmbeddedViewOptions embeddedViewOptions) {
            this.getEmbeddedViewAsync(accessToken, onBehalfOfUser, embeddedViewOptions, null);
        }
        
        /// <remarks/>
        public void getEmbeddedViewAsync(string accessToken, OnBehalfOfUser onBehalfOfUser, EmbeddedViewOptions embeddedViewOptions, object userState) {
            if ((this.getEmbeddedViewOperationCompleted == null)) {
                this.getEmbeddedViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmbeddedViewOperationCompleted);
            }
            this.InvokeAsync("getEmbeddedView", new object[] {
                        accessToken,
                        onBehalfOfUser,
                        embeddedViewOptions}, this.getEmbeddedViewOperationCompleted, userState);
        }
        
        private void OngetEmbeddedViewOperationCompleted(object arg) {
            if ((this.getEmbeddedViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmbeddedViewCompleted(this, new getEmbeddedViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetFormDataResult getFormData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getFormData", new object[] {
                        apiKey,
                        documentKey});
            return ((GetFormDataResult)(results[0]));
        }
        
        /// <remarks/>
        public void getFormDataAsync(string apiKey, string documentKey) {
            this.getFormDataAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getFormDataAsync(string apiKey, string documentKey, object userState) {
            if ((this.getFormDataOperationCompleted == null)) {
                this.getFormDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormDataOperationCompleted);
            }
            this.InvokeAsync("getFormData", new object[] {
                        apiKey,
                        documentKey}, this.getFormDataOperationCompleted, userState);
        }
        
        private void OngetFormDataOperationCompleted(object arg) {
            if ((this.getFormDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormDataCompleted(this, new getFormDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetGroupsInAccountResult getGroupsInAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey) {
            object[] results = this.Invoke("getGroupsInAccount", new object[] {
                        apiKey});
            return ((GetGroupsInAccountResult)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupsInAccountAsync(string apiKey) {
            this.getGroupsInAccountAsync(apiKey, null);
        }
        
        /// <remarks/>
        public void getGroupsInAccountAsync(string apiKey, object userState) {
            if ((this.getGroupsInAccountOperationCompleted == null)) {
                this.getGroupsInAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupsInAccountOperationCompleted);
            }
            this.InvokeAsync("getGroupsInAccount", new object[] {
                        apiKey}, this.getGroupsInAccountOperationCompleted, userState);
        }
        
        private void OngetGroupsInAccountOperationCompleted(object arg) {
            if ((this.getGroupsInAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupsInAccountCompleted(this, new getGroupsInAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("documentImageList", IsNullable=true)]
        public DocumentImageList getImagesByVersion([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string versionKey) {
            object[] results = this.Invoke("getImagesByVersion", new object[] {
                        apiKey,
                        versionKey});
            return ((DocumentImageList)(results[0]));
        }
        
        /// <remarks/>
        public void getImagesByVersionAsync(string apiKey, string versionKey) {
            this.getImagesByVersionAsync(apiKey, versionKey, null);
        }
        
        /// <remarks/>
        public void getImagesByVersionAsync(string apiKey, string versionKey, object userState) {
            if ((this.getImagesByVersionOperationCompleted == null)) {
                this.getImagesByVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImagesByVersionOperationCompleted);
            }
            this.InvokeAsync("getImagesByVersion", new object[] {
                        apiKey,
                        versionKey}, this.getImagesByVersionOperationCompleted, userState);
        }
        
        private void OngetImagesByVersionOperationCompleted(object arg) {
            if ((this.getImagesByVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImagesByVersionCompleted(this, new getImagesByVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pdf", DataType="base64Binary", IsNullable=true)]
        public byte[] getLatestDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getLatestDocument", new object[] {
                        apiKey,
                        documentKey});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getLatestDocumentAsync(string apiKey, string documentKey) {
            this.getLatestDocumentAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getLatestDocumentAsync(string apiKey, string documentKey, object userState) {
            if ((this.getLatestDocumentOperationCompleted == null)) {
                this.getLatestDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatestDocumentOperationCompleted);
            }
            this.InvokeAsync("getLatestDocument", new object[] {
                        apiKey,
                        documentKey}, this.getLatestDocumentOperationCompleted, userState);
        }
        
        private void OngetLatestDocumentOperationCompleted(object arg) {
            if ((this.getLatestDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatestDocumentCompleted(this, new getLatestDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("documentUrlResult", IsNullable=true)]
        public DocumentUrlResult getLatestDocumentUrl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getLatestDocumentUrl", new object[] {
                        apiKey,
                        documentKey});
            return ((DocumentUrlResult)(results[0]));
        }
        
        /// <remarks/>
        public void getLatestDocumentUrlAsync(string apiKey, string documentKey) {
            this.getLatestDocumentUrlAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getLatestDocumentUrlAsync(string apiKey, string documentKey, object userState) {
            if ((this.getLatestDocumentUrlOperationCompleted == null)) {
                this.getLatestDocumentUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatestDocumentUrlOperationCompleted);
            }
            this.InvokeAsync("getLatestDocumentUrl", new object[] {
                        apiKey,
                        documentKey}, this.getLatestDocumentUrlOperationCompleted, userState);
        }
        
        private void OngetLatestDocumentUrlOperationCompleted(object arg) {
            if ((this.getLatestDocumentUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatestDocumentUrlCompleted(this, new getLatestDocumentUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("documentImageList", IsNullable=true)]
        public DocumentImageList getLatestImages([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getLatestImages", new object[] {
                        apiKey,
                        documentKey});
            return ((DocumentImageList)(results[0]));
        }
        
        /// <remarks/>
        public void getLatestImagesAsync(string apiKey, string documentKey) {
            this.getLatestImagesAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getLatestImagesAsync(string apiKey, string documentKey, object userState) {
            if ((this.getLatestImagesOperationCompleted == null)) {
                this.getLatestImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatestImagesOperationCompleted);
            }
            this.InvokeAsync("getLatestImages", new object[] {
                        apiKey,
                        documentKey}, this.getLatestImagesOperationCompleted, userState);
        }
        
        private void OngetLatestImagesOperationCompleted(object arg) {
            if ((this.getLatestImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatestImagesCompleted(this, new getLatestImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetLibraryDocumentsForUserResult getLibraryDocumentsForUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials) {
            object[] results = this.Invoke("getLibraryDocumentsForUser", new object[] {
                        apiKey,
                        userCredentials});
            return ((GetLibraryDocumentsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getLibraryDocumentsForUserAsync(string apiKey, UserCredentials userCredentials) {
            this.getLibraryDocumentsForUserAsync(apiKey, userCredentials, null);
        }
        
        /// <remarks/>
        public void getLibraryDocumentsForUserAsync(string apiKey, UserCredentials userCredentials, object userState) {
            if ((this.getLibraryDocumentsForUserOperationCompleted == null)) {
                this.getLibraryDocumentsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLibraryDocumentsForUserOperationCompleted);
            }
            this.InvokeAsync("getLibraryDocumentsForUser", new object[] {
                        apiKey,
                        userCredentials}, this.getLibraryDocumentsForUserOperationCompleted, userState);
        }
        
        private void OngetLibraryDocumentsForUserOperationCompleted(object arg) {
            if ((this.getLibraryDocumentsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLibraryDocumentsForUserCompleted(this, new getLibraryDocumentsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetMegaSignDocumentResult getMegaSignDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getMegaSignDocument", new object[] {
                        apiKey,
                        documentKey});
            return ((GetMegaSignDocumentResult)(results[0]));
        }
        
        /// <remarks/>
        public void getMegaSignDocumentAsync(string apiKey, string documentKey) {
            this.getMegaSignDocumentAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getMegaSignDocumentAsync(string apiKey, string documentKey, object userState) {
            if ((this.getMegaSignDocumentOperationCompleted == null)) {
                this.getMegaSignDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMegaSignDocumentOperationCompleted);
            }
            this.InvokeAsync("getMegaSignDocument", new object[] {
                        apiKey,
                        documentKey}, this.getMegaSignDocumentOperationCompleted, userState);
        }
        
        private void OngetMegaSignDocumentOperationCompleted(object arg) {
            if ((this.getMegaSignDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMegaSignDocumentCompleted(this, new getMegaSignDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentsForUserResult getMyDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey) {
            object[] results = this.Invoke("getMyDocuments", new object[] {
                        apiKey});
            return ((GetDocumentsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getMyDocumentsAsync(string apiKey) {
            this.getMyDocumentsAsync(apiKey, null);
        }
        
        /// <remarks/>
        public void getMyDocumentsAsync(string apiKey, object userState) {
            if ((this.getMyDocumentsOperationCompleted == null)) {
                this.getMyDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyDocumentsOperationCompleted);
            }
            this.InvokeAsync("getMyDocuments", new object[] {
                        apiKey}, this.getMyDocumentsOperationCompleted, userState);
        }
        
        private void OngetMyDocumentsOperationCompleted(object arg) {
            if ((this.getMyDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyDocumentsCompleted(this, new getMyDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetLibraryDocumentsForUserResult getMyLibraryDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey) {
            object[] results = this.Invoke("getMyLibraryDocuments", new object[] {
                        apiKey});
            return ((GetLibraryDocumentsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getMyLibraryDocumentsAsync(string apiKey) {
            this.getMyLibraryDocumentsAsync(apiKey, null);
        }
        
        /// <remarks/>
        public void getMyLibraryDocumentsAsync(string apiKey, object userState) {
            if ((this.getMyLibraryDocumentsOperationCompleted == null)) {
                this.getMyLibraryDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyLibraryDocumentsOperationCompleted);
            }
            this.InvokeAsync("getMyLibraryDocuments", new object[] {
                        apiKey}, this.getMyLibraryDocumentsOperationCompleted, userState);
        }
        
        private void OngetMyLibraryDocumentsOperationCompleted(object arg) {
            if ((this.getMyLibraryDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyLibraryDocumentsCompleted(this, new getMyLibraryDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWidgetsForUserResult getMyWidgets([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey) {
            object[] results = this.Invoke("getMyWidgets", new object[] {
                        apiKey});
            return ((GetWidgetsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getMyWidgetsAsync(string apiKey) {
            this.getMyWidgetsAsync(apiKey, null);
        }
        
        /// <remarks/>
        public void getMyWidgetsAsync(string apiKey, object userState) {
            if ((this.getMyWidgetsOperationCompleted == null)) {
                this.getMyWidgetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyWidgetsOperationCompleted);
            }
            this.InvokeAsync("getMyWidgets", new object[] {
                        apiKey}, this.getMyWidgetsOperationCompleted, userState);
        }
        
        private void OngetMyWidgetsOperationCompleted(object arg) {
            if ((this.getMyWidgetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyWidgetsCompleted(this, new getMyWidgetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetSignerFormFieldsResult getSignerFormFields([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetSignerFormFieldsOptions options) {
            object[] results = this.Invoke("getSignerFormFields", new object[] {
                        apiKey,
                        documentKey,
                        options});
            return ((GetSignerFormFieldsResult)(results[0]));
        }
        
        /// <remarks/>
        public void getSignerFormFieldsAsync(string apiKey, string documentKey, GetSignerFormFieldsOptions options) {
            this.getSignerFormFieldsAsync(apiKey, documentKey, options, null);
        }
        
        /// <remarks/>
        public void getSignerFormFieldsAsync(string apiKey, string documentKey, GetSignerFormFieldsOptions options, object userState) {
            if ((this.getSignerFormFieldsOperationCompleted == null)) {
                this.getSignerFormFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSignerFormFieldsOperationCompleted);
            }
            this.InvokeAsync("getSignerFormFields", new object[] {
                        apiKey,
                        documentKey,
                        options}, this.getSignerFormFieldsOperationCompleted, userState);
        }
        
        private void OngetSignerFormFieldsOperationCompleted(object arg) {
            if ((this.getSignerFormFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSignerFormFieldsCompleted(this, new getSignerFormFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SigningUrlResult getSigningUrl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("getSigningUrl", new object[] {
                        apiKey,
                        documentKey});
            return ((SigningUrlResult)(results[0]));
        }
        
        /// <remarks/>
        public void getSigningUrlAsync(string apiKey, string documentKey) {
            this.getSigningUrlAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void getSigningUrlAsync(string apiKey, string documentKey, object userState) {
            if ((this.getSigningUrlOperationCompleted == null)) {
                this.getSigningUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSigningUrlOperationCompleted);
            }
            this.InvokeAsync("getSigningUrl", new object[] {
                        apiKey,
                        documentKey}, this.getSigningUrlOperationCompleted, userState);
        }
        
        private void OngetSigningUrlOperationCompleted(object arg) {
            if ((this.getSigningUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSigningUrlCompleted(this, new getSigningUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetSupportingDocumentsResult getSupportingDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] supportingDocumentKeys, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetSupportingDocumentsOptions options) {
            object[] results = this.Invoke("getSupportingDocuments", new object[] {
                        apiKey,
                        documentKey,
                        supportingDocumentKeys,
                        options});
            return ((GetSupportingDocumentsResult)(results[0]));
        }
        
        /// <remarks/>
        public void getSupportingDocumentsAsync(string apiKey, string documentKey, string[] supportingDocumentKeys, GetSupportingDocumentsOptions options) {
            this.getSupportingDocumentsAsync(apiKey, documentKey, supportingDocumentKeys, options, null);
        }
        
        /// <remarks/>
        public void getSupportingDocumentsAsync(string apiKey, string documentKey, string[] supportingDocumentKeys, GetSupportingDocumentsOptions options, object userState) {
            if ((this.getSupportingDocumentsOperationCompleted == null)) {
                this.getSupportingDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportingDocumentsOperationCompleted);
            }
            this.InvokeAsync("getSupportingDocuments", new object[] {
                        apiKey,
                        documentKey,
                        supportingDocumentKeys,
                        options}, this.getSupportingDocumentsOperationCompleted, userState);
        }
        
        private void OngetSupportingDocumentsOperationCompleted(object arg) {
            if ((this.getSupportingDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupportingDocumentsCompleted(this, new getSupportingDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDocumentsForUserResult", IsNullable=true)]
        public GetDocumentsForUserResult getUserDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials) {
            object[] results = this.Invoke("getUserDocuments", new object[] {
                        apiKey,
                        userCredentials});
            return ((GetDocumentsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getUserDocumentsAsync(string apiKey, UserCredentials userCredentials) {
            this.getUserDocumentsAsync(apiKey, userCredentials, null);
        }
        
        /// <remarks/>
        public void getUserDocumentsAsync(string apiKey, UserCredentials userCredentials, object userState) {
            if ((this.getUserDocumentsOperationCompleted == null)) {
                this.getUserDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDocumentsOperationCompleted);
            }
            this.InvokeAsync("getUserDocuments", new object[] {
                        apiKey,
                        userCredentials}, this.getUserDocumentsOperationCompleted, userState);
        }
        
        private void OngetUserDocumentsOperationCompleted(object arg) {
            if ((this.getUserDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDocumentsCompleted(this, new getUserDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetUserInfoResult getUserInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetUserInfoOptions options) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        apiKey,
                        options});
            return ((GetUserInfoResult)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string apiKey, GetUserInfoOptions options) {
            this.getUserInfoAsync(apiKey, options, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string apiKey, GetUserInfoOptions options, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        apiKey,
                        options}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetUsersInAccountResult getUsersInAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey) {
            object[] results = this.Invoke("getUsersInAccount", new object[] {
                        apiKey});
            return ((GetUsersInAccountResult)(results[0]));
        }
        
        /// <remarks/>
        public void getUsersInAccountAsync(string apiKey) {
            this.getUsersInAccountAsync(apiKey, null);
        }
        
        /// <remarks/>
        public void getUsersInAccountAsync(string apiKey, object userState) {
            if ((this.getUsersInAccountOperationCompleted == null)) {
                this.getUsersInAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersInAccountOperationCompleted);
            }
            this.InvokeAsync("getUsersInAccount", new object[] {
                        apiKey}, this.getUsersInAccountOperationCompleted, userState);
        }
        
        private void OngetUsersInAccountOperationCompleted(object arg) {
            if ((this.getUsersInAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersInAccountCompleted(this, new getUsersInAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetUsersInGroupResult getUsersInGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string groupKey) {
            object[] results = this.Invoke("getUsersInGroup", new object[] {
                        apiKey,
                        groupKey});
            return ((GetUsersInGroupResult)(results[0]));
        }
        
        /// <remarks/>
        public void getUsersInGroupAsync(string apiKey, string groupKey) {
            this.getUsersInGroupAsync(apiKey, groupKey, null);
        }
        
        /// <remarks/>
        public void getUsersInGroupAsync(string apiKey, string groupKey, object userState) {
            if ((this.getUsersInGroupOperationCompleted == null)) {
                this.getUsersInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersInGroupOperationCompleted);
            }
            this.InvokeAsync("getUsersInGroup", new object[] {
                        apiKey,
                        groupKey}, this.getUsersInGroupOperationCompleted, userState);
        }
        
        private void OngetUsersInGroupOperationCompleted(object arg) {
            if ((this.getUsersInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersInGroupCompleted(this, new getUsersInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetWidgetsForUserResult getWidgetsForUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials) {
            object[] results = this.Invoke("getWidgetsForUser", new object[] {
                        apiKey,
                        userCredentials});
            return ((GetWidgetsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void getWidgetsForUserAsync(string apiKey, UserCredentials userCredentials) {
            this.getWidgetsForUserAsync(apiKey, userCredentials, null);
        }
        
        /// <remarks/>
        public void getWidgetsForUserAsync(string apiKey, UserCredentials userCredentials, object userState) {
            if ((this.getWidgetsForUserOperationCompleted == null)) {
                this.getWidgetsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWidgetsForUserOperationCompleted);
            }
            this.InvokeAsync("getWidgetsForUser", new object[] {
                        apiKey,
                        userCredentials}, this.getWidgetsForUserOperationCompleted, userState);
        }
        
        private void OngetWidgetsForUserOperationCompleted(object arg) {
            if ((this.getWidgetsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWidgetsForUserCompleted(this, new getWidgetsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public InitiateInteractiveSendDocumentResult initiateInteractiveSendDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCreationInfo documentCreationInfo, bool forceSendConfirmation, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> authoringRequested) {
            object[] results = this.Invoke("initiateInteractiveSendDocument", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo,
                        forceSendConfirmation,
                        authoringRequested});
            return ((InitiateInteractiveSendDocumentResult)(results[0]));
        }
        
        /// <remarks/>
        public void initiateInteractiveSendDocumentAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo, bool forceSendConfirmation, System.Nullable<bool> authoringRequested) {
            this.initiateInteractiveSendDocumentAsync(apiKey, senderInfo, documentCreationInfo, forceSendConfirmation, authoringRequested, null);
        }
        
        /// <remarks/>
        public void initiateInteractiveSendDocumentAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo, bool forceSendConfirmation, System.Nullable<bool> authoringRequested, object userState) {
            if ((this.initiateInteractiveSendDocumentOperationCompleted == null)) {
                this.initiateInteractiveSendDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OninitiateInteractiveSendDocumentOperationCompleted);
            }
            this.InvokeAsync("initiateInteractiveSendDocument", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo,
                        forceSendConfirmation,
                        authoringRequested}, this.initiateInteractiveSendDocumentOperationCompleted, userState);
        }
        
        private void OninitiateInteractiveSendDocumentOperationCompleted(object arg) {
            if ((this.initiateInteractiveSendDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.initiateInteractiveSendDocumentCompleted(this, new initiateInteractiveSendDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MoveUsersToGroupResult moveUsersToGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string groupKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UsersToMoveInfo usersToMoveInfo) {
            object[] results = this.Invoke("moveUsersToGroup", new object[] {
                        apiKey,
                        groupKey,
                        usersToMoveInfo});
            return ((MoveUsersToGroupResult)(results[0]));
        }
        
        /// <remarks/>
        public void moveUsersToGroupAsync(string apiKey, string groupKey, UsersToMoveInfo usersToMoveInfo) {
            this.moveUsersToGroupAsync(apiKey, groupKey, usersToMoveInfo, null);
        }
        
        /// <remarks/>
        public void moveUsersToGroupAsync(string apiKey, string groupKey, UsersToMoveInfo usersToMoveInfo, object userState) {
            if ((this.moveUsersToGroupOperationCompleted == null)) {
                this.moveUsersToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveUsersToGroupOperationCompleted);
            }
            this.InvokeAsync("moveUsersToGroup", new object[] {
                        apiKey,
                        groupKey,
                        usersToMoveInfo}, this.moveUsersToGroupOperationCompleted, userState);
        }
        
        private void OnmoveUsersToGroupOperationCompleted(object arg) {
            if ((this.moveUsersToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveUsersToGroupCompleted(this, new moveUsersToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public NotifyDocumentVaultedResult notifyDocumentVaulted([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accessToken, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] VaultEventInfo vaultEventInfo) {
            object[] results = this.Invoke("notifyDocumentVaulted", new object[] {
                        accessToken,
                        documentKey,
                        vaultEventInfo});
            return ((NotifyDocumentVaultedResult)(results[0]));
        }
        
        /// <remarks/>
        public void notifyDocumentVaultedAsync(string accessToken, string documentKey, VaultEventInfo vaultEventInfo) {
            this.notifyDocumentVaultedAsync(accessToken, documentKey, vaultEventInfo, null);
        }
        
        /// <remarks/>
        public void notifyDocumentVaultedAsync(string accessToken, string documentKey, VaultEventInfo vaultEventInfo, object userState) {
            if ((this.notifyDocumentVaultedOperationCompleted == null)) {
                this.notifyDocumentVaultedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnotifyDocumentVaultedOperationCompleted);
            }
            this.InvokeAsync("notifyDocumentVaulted", new object[] {
                        accessToken,
                        documentKey,
                        vaultEventInfo}, this.notifyDocumentVaultedOperationCompleted, userState);
        }
        
        private void OnnotifyDocumentVaultedOperationCompleted(object arg) {
            if ((this.notifyDocumentVaultedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.notifyDocumentVaultedCompleted(this, new notifyDocumentVaultedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("embeddedWidgetCreationResult", IsNullable=true)]
        public EmbeddedWidgetCreationResult personalizeEmbeddedWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string widgetJavascript, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetPersonalizationInfo personalizationInfo) {
            object[] results = this.Invoke("personalizeEmbeddedWidget", new object[] {
                        apiKey,
                        widgetJavascript,
                        personalizationInfo});
            return ((EmbeddedWidgetCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void personalizeEmbeddedWidgetAsync(string apiKey, string widgetJavascript, WidgetPersonalizationInfo personalizationInfo) {
            this.personalizeEmbeddedWidgetAsync(apiKey, widgetJavascript, personalizationInfo, null);
        }
        
        /// <remarks/>
        public void personalizeEmbeddedWidgetAsync(string apiKey, string widgetJavascript, WidgetPersonalizationInfo personalizationInfo, object userState) {
            if ((this.personalizeEmbeddedWidgetOperationCompleted == null)) {
                this.personalizeEmbeddedWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpersonalizeEmbeddedWidgetOperationCompleted);
            }
            this.InvokeAsync("personalizeEmbeddedWidget", new object[] {
                        apiKey,
                        widgetJavascript,
                        personalizationInfo}, this.personalizeEmbeddedWidgetOperationCompleted, userState);
        }
        
        private void OnpersonalizeEmbeddedWidgetOperationCompleted(object arg) {
            if ((this.personalizeEmbeddedWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.personalizeEmbeddedWidgetCompleted(this, new personalizeEmbeddedWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("urlWidgetCreationResult", IsNullable=true)]
        public UrlWidgetCreationResult personalizeUrlWidget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string widgetUrl, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WidgetPersonalizationInfo personalizationInfo) {
            object[] results = this.Invoke("personalizeUrlWidget", new object[] {
                        apiKey,
                        widgetUrl,
                        personalizationInfo});
            return ((UrlWidgetCreationResult)(results[0]));
        }
        
        /// <remarks/>
        public void personalizeUrlWidgetAsync(string apiKey, string widgetUrl, WidgetPersonalizationInfo personalizationInfo) {
            this.personalizeUrlWidgetAsync(apiKey, widgetUrl, personalizationInfo, null);
        }
        
        /// <remarks/>
        public void personalizeUrlWidgetAsync(string apiKey, string widgetUrl, WidgetPersonalizationInfo personalizationInfo, object userState) {
            if ((this.personalizeUrlWidgetOperationCompleted == null)) {
                this.personalizeUrlWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpersonalizeUrlWidgetOperationCompleted);
            }
            this.InvokeAsync("personalizeUrlWidget", new object[] {
                        apiKey,
                        widgetUrl,
                        personalizationInfo}, this.personalizeUrlWidgetOperationCompleted, userState);
        }
        
        private void OnpersonalizeUrlWidgetOperationCompleted(object arg) {
            if ((this.personalizeUrlWidgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.personalizeUrlWidgetCompleted(this, new personalizeUrlWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RejectDocumentResult rejectDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] RejectDocumentOptions rejectDocumentOptions) {
            object[] results = this.Invoke("rejectDocument", new object[] {
                        apiKey,
                        userCredentials,
                        documentKey,
                        rejectDocumentOptions});
            return ((RejectDocumentResult)(results[0]));
        }
        
        /// <remarks/>
        public void rejectDocumentAsync(string apiKey, UserCredentials userCredentials, string documentKey, RejectDocumentOptions rejectDocumentOptions) {
            this.rejectDocumentAsync(apiKey, userCredentials, documentKey, rejectDocumentOptions, null);
        }
        
        /// <remarks/>
        public void rejectDocumentAsync(string apiKey, UserCredentials userCredentials, string documentKey, RejectDocumentOptions rejectDocumentOptions, object userState) {
            if ((this.rejectDocumentOperationCompleted == null)) {
                this.rejectDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrejectDocumentOperationCompleted);
            }
            this.InvokeAsync("rejectDocument", new object[] {
                        apiKey,
                        userCredentials,
                        documentKey,
                        rejectDocumentOptions}, this.rejectDocumentOperationCompleted, userState);
        }
        
        private void OnrejectDocumentOperationCompleted(object arg) {
            if ((this.rejectDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rejectDocumentCompleted(this, new rejectDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RemoveDocumentResult removeDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey) {
            object[] results = this.Invoke("removeDocument", new object[] {
                        apiKey,
                        documentKey});
            return ((RemoveDocumentResult)(results[0]));
        }
        
        /// <remarks/>
        public void removeDocumentAsync(string apiKey, string documentKey) {
            this.removeDocumentAsync(apiKey, documentKey, null);
        }
        
        /// <remarks/>
        public void removeDocumentAsync(string apiKey, string documentKey, object userState) {
            if ((this.removeDocumentOperationCompleted == null)) {
                this.removeDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDocumentOperationCompleted);
            }
            this.InvokeAsync("removeDocument", new object[] {
                        apiKey,
                        documentKey}, this.removeDocumentOperationCompleted, userState);
        }
        
        private void OnremoveDocumentOperationCompleted(object arg) {
            if ((this.removeDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDocumentCompleted(this, new removeDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RenameGroupResult renameGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string groupKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string newGroupName) {
            object[] results = this.Invoke("renameGroup", new object[] {
                        apiKey,
                        groupKey,
                        newGroupName});
            return ((RenameGroupResult)(results[0]));
        }
        
        /// <remarks/>
        public void renameGroupAsync(string apiKey, string groupKey, string newGroupName) {
            this.renameGroupAsync(apiKey, groupKey, newGroupName, null);
        }
        
        /// <remarks/>
        public void renameGroupAsync(string apiKey, string groupKey, string newGroupName, object userState) {
            if ((this.renameGroupOperationCompleted == null)) {
                this.renameGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameGroupOperationCompleted);
            }
            this.InvokeAsync("renameGroup", new object[] {
                        apiKey,
                        groupKey,
                        newGroupName}, this.renameGroupOperationCompleted, userState);
        }
        
        private void OnrenameGroupOperationCompleted(object arg) {
            if ((this.renameGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameGroupCompleted(this, new renameGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ReplaceSignerResult replaceSigner([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ReplaceSignerOptions replaceSignerOptions) {
            object[] results = this.Invoke("replaceSigner", new object[] {
                        apiKey,
                        userCredentials,
                        documentKey,
                        replaceSignerOptions});
            return ((ReplaceSignerResult)(results[0]));
        }
        
        /// <remarks/>
        public void replaceSignerAsync(string apiKey, UserCredentials userCredentials, string documentKey, ReplaceSignerOptions replaceSignerOptions) {
            this.replaceSignerAsync(apiKey, userCredentials, documentKey, replaceSignerOptions, null);
        }
        
        /// <remarks/>
        public void replaceSignerAsync(string apiKey, UserCredentials userCredentials, string documentKey, ReplaceSignerOptions replaceSignerOptions, object userState) {
            if ((this.replaceSignerOperationCompleted == null)) {
                this.replaceSignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplaceSignerOperationCompleted);
            }
            this.InvokeAsync("replaceSigner", new object[] {
                        apiKey,
                        userCredentials,
                        documentKey,
                        replaceSignerOptions}, this.replaceSignerOperationCompleted, userState);
        }
        
        private void OnreplaceSignerOperationCompleted(object arg) {
            if ((this.replaceSignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replaceSignerCompleted(this, new replaceSignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetDocumentsForUserResult searchUserDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserCredentials userCredentials, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SearchUserDocumentsOptions options) {
            object[] results = this.Invoke("searchUserDocuments", new object[] {
                        apiKey,
                        userCredentials,
                        options});
            return ((GetDocumentsForUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchUserDocumentsAsync(string apiKey, UserCredentials userCredentials, SearchUserDocumentsOptions options) {
            this.searchUserDocumentsAsync(apiKey, userCredentials, options, null);
        }
        
        /// <remarks/>
        public void searchUserDocumentsAsync(string apiKey, UserCredentials userCredentials, SearchUserDocumentsOptions options, object userState) {
            if ((this.searchUserDocumentsOperationCompleted == null)) {
                this.searchUserDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchUserDocumentsOperationCompleted);
            }
            this.InvokeAsync("searchUserDocuments", new object[] {
                        apiKey,
                        userCredentials,
                        options}, this.searchUserDocumentsOperationCompleted, userState);
        }
        
        private void OnsearchUserDocumentsOperationCompleted(object arg) {
            if ((this.searchUserDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchUserDocumentsCompleted(this, new searchUserDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("documentKeys", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto16.api.echosign")]
        public DocumentKey[] sendDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCreationInfo documentCreationInfo) {
            object[] results = this.Invoke("sendDocument", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo});
            return ((DocumentKey[])(results[0]));
        }
        
        /// <remarks/>
        public void sendDocumentAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo) {
            this.sendDocumentAsync(apiKey, senderInfo, documentCreationInfo, null);
        }
        
        /// <remarks/>
        public void sendDocumentAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo, object userState) {
            if ((this.sendDocumentOperationCompleted == null)) {
                this.sendDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDocumentOperationCompleted);
            }
            this.InvokeAsync("sendDocument", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo}, this.sendDocumentOperationCompleted, userState);
        }
        
        private void OnsendDocumentOperationCompleted(object arg) {
            if ((this.sendDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDocumentCompleted(this, new sendDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SendDocumentInteractiveResult sendDocumentInteractive([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCreationInfo documentCreationInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SendDocumentInteractiveOptions sendDocumentInteractiveOptions) {
            object[] results = this.Invoke("sendDocumentInteractive", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo,
                        sendDocumentInteractiveOptions});
            return ((SendDocumentInteractiveResult)(results[0]));
        }
        
        /// <remarks/>
        public void sendDocumentInteractiveAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo, SendDocumentInteractiveOptions sendDocumentInteractiveOptions) {
            this.sendDocumentInteractiveAsync(apiKey, senderInfo, documentCreationInfo, sendDocumentInteractiveOptions, null);
        }
        
        /// <remarks/>
        public void sendDocumentInteractiveAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo, SendDocumentInteractiveOptions sendDocumentInteractiveOptions, object userState) {
            if ((this.sendDocumentInteractiveOperationCompleted == null)) {
                this.sendDocumentInteractiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDocumentInteractiveOperationCompleted);
            }
            this.InvokeAsync("sendDocumentInteractive", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo,
                        sendDocumentInteractiveOptions}, this.sendDocumentInteractiveOperationCompleted, userState);
        }
        
        private void OnsendDocumentInteractiveOperationCompleted(object arg) {
            if ((this.sendDocumentInteractiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDocumentInteractiveCompleted(this, new sendDocumentInteractiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sendMegaSignDocumentResult", IsNullable=true)]
        public SendDocumentMegaSignResult sendDocumentMegaSign([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SenderInfo senderInfo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCreationInfo documentCreationInfo) {
            object[] results = this.Invoke("sendDocumentMegaSign", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo});
            return ((SendDocumentMegaSignResult)(results[0]));
        }
        
        /// <remarks/>
        public void sendDocumentMegaSignAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo) {
            this.sendDocumentMegaSignAsync(apiKey, senderInfo, documentCreationInfo, null);
        }
        
        /// <remarks/>
        public void sendDocumentMegaSignAsync(string apiKey, SenderInfo senderInfo, DocumentCreationInfo documentCreationInfo, object userState) {
            if ((this.sendDocumentMegaSignOperationCompleted == null)) {
                this.sendDocumentMegaSignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDocumentMegaSignOperationCompleted);
            }
            this.InvokeAsync("sendDocumentMegaSign", new object[] {
                        apiKey,
                        senderInfo,
                        documentCreationInfo}, this.sendDocumentMegaSignOperationCompleted, userState);
        }
        
        private void OnsendDocumentMegaSignOperationCompleted(object arg) {
            if ((this.sendDocumentMegaSignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDocumentMegaSignCompleted(this, new sendDocumentMegaSignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sendreminderResult", IsNullable=true)]
        public SendReminderResult sendReminder([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string documentKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string comment) {
            object[] results = this.Invoke("sendReminder", new object[] {
                        apiKey,
                        documentKey,
                        comment});
            return ((SendReminderResult)(results[0]));
        }
        
        /// <remarks/>
        public void sendReminderAsync(string apiKey, string documentKey, string comment) {
            this.sendReminderAsync(apiKey, documentKey, comment, null);
        }
        
        /// <remarks/>
        public void sendReminderAsync(string apiKey, string documentKey, string comment, object userState) {
            if ((this.sendReminderOperationCompleted == null)) {
                this.sendReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendReminderOperationCompleted);
            }
            this.InvokeAsync("sendReminder", new object[] {
                        apiKey,
                        documentKey,
                        comment}, this.sendReminderOperationCompleted, userState);
        }
        
        private void OnsendReminderOperationCompleted(object arg) {
            if ((this.sendReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendReminderCompleted(this, new sendReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outFile", DataType="base64Binary", IsNullable=true)]
        public byte[] testEchoFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] file) {
            object[] results = this.Invoke("testEchoFile", new object[] {
                        apiKey,
                        file});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void testEchoFileAsync(string apiKey, byte[] file) {
            this.testEchoFileAsync(apiKey, file, null);
        }
        
        /// <remarks/>
        public void testEchoFileAsync(string apiKey, byte[] file, object userState) {
            if ((this.testEchoFileOperationCompleted == null)) {
                this.testEchoFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestEchoFileOperationCompleted);
            }
            this.InvokeAsync("testEchoFile", new object[] {
                        apiKey,
                        file}, this.testEchoFileOperationCompleted, userState);
        }
        
        private void OntestEchoFileOperationCompleted(object arg) {
            if ((this.testEchoFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testEchoFileCompleted(this, new testEchoFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pong", IsNullable=true)]
        public Pong testPing([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey) {
            object[] results = this.Invoke("testPing", new object[] {
                        apiKey});
            return ((Pong)(results[0]));
        }
        
        /// <remarks/>
        public void testPingAsync(string apiKey) {
            this.testPingAsync(apiKey, null);
        }
        
        /// <remarks/>
        public void testPingAsync(string apiKey, object userState) {
            if ((this.testPingOperationCompleted == null)) {
                this.testPingOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestPingOperationCompleted);
            }
            this.InvokeAsync("testPing", new object[] {
                        apiKey}, this.testPingOperationCompleted, userState);
        }
        
        private void OntestPingOperationCompleted(object arg) {
            if ((this.testPingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testPingCompleted(this, new testPingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://api.echosign", ResponseNamespace="http://api.echosign", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("userVerificationInfo", IsNullable=true)]
        public UserVerificationInfo verifyUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("verifyUser", new object[] {
                        apiKey,
                        email,
                        password});
            return ((UserVerificationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void verifyUserAsync(string apiKey, string email, string password) {
            this.verifyUserAsync(apiKey, email, password, null);
        }
        
        /// <remarks/>
        public void verifyUserAsync(string apiKey, string email, string password, object userState) {
            if ((this.verifyUserOperationCompleted == null)) {
                this.verifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyUserOperationCompleted);
            }
            this.InvokeAsync("verifyUser", new object[] {
                        apiKey,
                        email,
                        password}, this.verifyUserOperationCompleted, userState);
        }
        
        private void OnverifyUserOperationCompleted(object arg) {
            if ((this.verifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyUserCompleted(this, new verifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class CancelDocumentResult {
        
        private System.Nullable<Result> resultField;
        
        private bool resultFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Result> result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum Result {
        
        /// <remarks/>
        REMINDER_SENT,
        
        /// <remarks/>
        CANCELLED,
        
        /// <remarks/>
        ALREADY_SIGNED,
        
        /// <remarks/>
        ALREADY_CANCELLED,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_API_KEY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class UserVerificationInfo {
        
        private System.Nullable<UserVerificationStatus> userVerificationStatusField;
        
        private bool userVerificationStatusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<UserVerificationStatus> userVerificationStatus {
            get {
                return this.userVerificationStatusField;
            }
            set {
                this.userVerificationStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userVerificationStatusSpecified {
            get {
                return this.userVerificationStatusFieldSpecified;
            }
            set {
                this.userVerificationStatusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum UserVerificationStatus {
        
        /// <remarks/>
        VALID,
        
        /// <remarks/>
        DOES_NOT_EXIST,
        
        /// <remarks/>
        INVALID_PASSWORD,
        
        /// <remarks/>
        UNVERIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class Pong {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class SendReminderResult {
        
        private string recipientEmailField;
        
        private System.Nullable<Result> resultField;
        
        private bool resultFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recipientEmail {
            get {
                return this.recipientEmailField;
            }
            set {
                this.recipientEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Result> result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class SendDocumentMegaSignResult {
        
        private DocumentKey documentKeyField;
        
        private DocumentKey[] documentKeyArrayField;
        
        private System.Nullable<SendDocumentMegaSignResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentKey documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentKey[] documentKeyArray {
            get {
                return this.documentKeyArrayField;
            }
            set {
                this.documentKeyArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SendDocumentMegaSignResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class DocumentKey {
        
        private string documentKeyField;
        
        private string recipientEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recipientEmail {
            get {
                return this.recipientEmailField;
            }
            set {
                this.recipientEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum SendDocumentMegaSignResultErrorCode {
        
        /// <remarks/>
        ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class SendDocumentInteractiveResult {
        
        private DocumentKey documentKeyField;
        
        private string embeddedCodeField;
        
        private System.Nullable<SendDocumentInteractiveResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private System.DateTime expirationField;
        
        private bool expirationFieldSpecified;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentKey documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string embeddedCode {
            get {
                return this.embeddedCodeField;
            }
            set {
                this.embeddedCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SendDocumentInteractiveResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationSpecified {
            get {
                return this.expirationFieldSpecified;
            }
            set {
                this.expirationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto12.api.echosign")]
    public enum SendDocumentInteractiveResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_ARGUMENTS,
        
        /// <remarks/>
        AUTOLOGIN_DENIED,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto12.api.echosign")]
    public partial class SendDocumentInteractiveOptions {
        
        private bool authoringRequestedField;
        
        private bool authoringRequestedFieldSpecified;
        
        private bool autoLoginUserField;
        
        private bool autoLoginUserFieldSpecified;
        
        private bool noChromeField;
        
        private bool noChromeFieldSpecified;
        
        /// <remarks/>
        public bool authoringRequested {
            get {
                return this.authoringRequestedField;
            }
            set {
                this.authoringRequestedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authoringRequestedSpecified {
            get {
                return this.authoringRequestedFieldSpecified;
            }
            set {
                this.authoringRequestedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool autoLoginUser {
            get {
                return this.autoLoginUserField;
            }
            set {
                this.autoLoginUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool autoLoginUserSpecified {
            get {
                return this.autoLoginUserFieldSpecified;
            }
            set {
                this.autoLoginUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool noChrome {
            get {
                return this.noChromeField;
            }
            set {
                this.noChromeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool noChromeSpecified {
            get {
                return this.noChromeFieldSpecified;
            }
            set {
                this.noChromeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class SearchUserDocumentsOptions {
        
        private string queryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class ReplaceSignerResult {
        
        private System.Nullable<ReplaceSignerResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ReplaceSignerResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum ReplaceSignerResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_CREDENTIALS,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_OPTIONS,
        
        /// <remarks/>
        INVALID_ORIGINAL_SIGNER,
        
        /// <remarks/>
        INVALID_NEW_SIGNER,
        
        /// <remarks/>
        INVALID_MESSAGE,
        
        /// <remarks/>
        SIGNER_REPLACEMENT_NOT_ALLOWED,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class ReplaceSignerOptions {
        
        private string messageField;
        
        private string newSignerEmailField;
        
        private string originalSignerEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newSignerEmail {
            get {
                return this.newSignerEmailField;
            }
            set {
                this.newSignerEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string originalSignerEmail {
            get {
                return this.originalSignerEmailField;
            }
            set {
                this.originalSignerEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public partial class RenameGroupResult {
        
        private System.Nullable<RenameGroupResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<RenameGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public enum RenameGroupResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_GROUP_KEY,
        
        /// <remarks/>
        INVALID_GROUP_NAME,
        
        /// <remarks/>
        TERMS_NOT_ACCEPTED,
        
        /// <remarks/>
        NOT_IN_ACCOUNT,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class RemoveDocumentResult {
        
        private System.Nullable<RemoveDocumentErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<RemoveDocumentErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum RemoveDocumentErrorCode {
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_REMOVED,
        
        /// <remarks/>
        DYNAMIC_DOCUMENT_EXPIRATION_NOT_ENABLED,
        
        /// <remarks/>
        REMOVE_FAILED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class RejectDocumentResult {
        
        private System.Nullable<RejectDocumentResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<RejectDocumentResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum RejectDocumentResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_CREDENTIALS,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_COMMENT,
        
        /// <remarks/>
        DOCUMENT_REJECTION_NOT_ALLOWED,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class RejectDocumentOptions {
        
        private string commentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class NotifyDocumentVaultedResult {
        
        private System.Nullable<NotifyDocumentVaultedResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<NotifyDocumentVaultedResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum NotifyDocumentVaultedResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_ACCESS_TOKEN,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_VAULT_ID,
        
        /// <remarks/>
        DOCUMENT_REMOVED,
        
        /// <remarks/>
        DOCUMENT_DELETED,
        
        /// <remarks/>
        DOCUMENT_NOT_READY_TO_VAULT,
        
        /// <remarks/>
        DOCMENT_VAULTED_ALREADY,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class VaultEventInfo {
        
        private string vaultEventCommentField;
        
        private string vaultEventIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vaultEventComment {
            get {
                return this.vaultEventCommentField;
            }
            set {
                this.vaultEventCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vaultEventId {
            get {
                return this.vaultEventIdField;
            }
            set {
                this.vaultEventIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public partial class MoveUsersToGroupResult {
        
        private System.Nullable<MoveUsersToGroupResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<MoveUsersToGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public enum MoveUsersToGroupResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_GROUP_KEY,
        
        /// <remarks/>
        INVALID_USER_EMAIL,
        
        /// <remarks/>
        TERMS_NOT_ACCEPTED,
        
        /// <remarks/>
        NOT_IN_ACCOUNT,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public partial class UsersToMoveInfo {
        
        private bool preserveGroupAdminsField;
        
        private bool preserveGroupAdminsFieldSpecified;
        
        private string[] userEmailsField;
        
        /// <remarks/>
        public bool preserveGroupAdmins {
            get {
                return this.preserveGroupAdminsField;
            }
            set {
                this.preserveGroupAdminsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preserveGroupAdminsSpecified {
            get {
                return this.preserveGroupAdminsFieldSpecified;
            }
            set {
                this.preserveGroupAdminsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://api.echosign")]
        public string[] userEmails {
            get {
                return this.userEmailsField;
            }
            set {
                this.userEmailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="DocumentKey", Namespace="http://dto.api.echosign")]
    public partial class DocumentKey1 {
        
        private string documentKeyField;
        
        private string recipientEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recipientEmail {
            get {
                return this.recipientEmailField;
            }
            set {
                this.recipientEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class InitiateInteractiveSendDocumentResult {
        
        private DocumentKey1 documentKeyField;
        
        private System.Nullable<InitiateInteractiveSendDocumentResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool needsInteractionField;
        
        private bool needsInteractionFieldSpecified;
        
        private string sendDocumentURLField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentKey1 documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<InitiateInteractiveSendDocumentResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool needsInteraction {
            get {
                return this.needsInteractionField;
            }
            set {
                this.needsInteractionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool needsInteractionSpecified {
            get {
                return this.needsInteractionFieldSpecified;
            }
            set {
                this.needsInteractionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sendDocumentURL {
            get {
                return this.sendDocumentURLField;
            }
            set {
                this.sendDocumentURLField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public enum InitiateInteractiveSendDocumentResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        FILE_RETRIEVAL_ERROR,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class DocumentCreationInfo {
        
        private CallbackInfo callbackInfoField;
        
        private string[] ccsField;
        
        private System.Nullable<int> daysUntilSigningDeadlineField;
        
        private bool daysUntilSigningDeadlineFieldSpecified;
        
        private ExternalId externalIdField;
        
        private FileInfo[] fileInfosField;
        
        private FileInfo[] formFieldLayerTemplatesField;
        
        private string localeField;
        
        private MergeFieldInfo mergeFieldInfoField;
        
        private byte[] mergeFileField;
        
        private string messageField;
        
        private string nameField;
        
        private RecipientInfo[] recipientsField;
        
        private System.Nullable<ReminderFrequency> reminderFrequencyField;
        
        private bool reminderFrequencyFieldSpecified;
        
        private SecurityOptions securityOptionsField;
        
        private System.Nullable<SignatureFlow> signatureFlowField;
        
        private bool signatureFlowFieldSpecified;
        
        private System.Nullable<SignatureType> signatureTypeField;
        
        private bool signatureTypeFieldSpecified;
        
        private string[] tosField;
        
        private VaultingInfo vaultingInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CallbackInfo callbackInfo {
            get {
                return this.callbackInfoField;
            }
            set {
                this.callbackInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://api.echosign")]
        public string[] ccs {
            get {
                return this.ccsField;
            }
            set {
                this.ccsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> daysUntilSigningDeadline {
            get {
                return this.daysUntilSigningDeadlineField;
            }
            set {
                this.daysUntilSigningDeadlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool daysUntilSigningDeadlineSpecified {
            get {
                return this.daysUntilSigningDeadlineFieldSpecified;
            }
            set {
                this.daysUntilSigningDeadlineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExternalId externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                this.fileInfosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public FileInfo[] formFieldLayerTemplates {
            get {
                return this.formFieldLayerTemplatesField;
            }
            set {
                this.formFieldLayerTemplatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MergeFieldInfo mergeFieldInfo {
            get {
                return this.mergeFieldInfoField;
            }
            set {
                this.mergeFieldInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] mergeFile {
            get {
                return this.mergeFileField;
            }
            set {
                this.mergeFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto14.api.echosign")]
        public RecipientInfo[] recipients {
            get {
                return this.recipientsField;
            }
            set {
                this.recipientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ReminderFrequency> reminderFrequency {
            get {
                return this.reminderFrequencyField;
            }
            set {
                this.reminderFrequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reminderFrequencySpecified {
            get {
                return this.reminderFrequencyFieldSpecified;
            }
            set {
                this.reminderFrequencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SecurityOptions securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                this.securityOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SignatureFlow> signatureFlow {
            get {
                return this.signatureFlowField;
            }
            set {
                this.signatureFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signatureFlowSpecified {
            get {
                return this.signatureFlowFieldSpecified;
            }
            set {
                this.signatureFlowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SignatureType> signatureType {
            get {
                return this.signatureTypeField;
            }
            set {
                this.signatureTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signatureTypeSpecified {
            get {
                return this.signatureTypeFieldSpecified;
            }
            set {
                this.signatureTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://api.echosign")]
        public string[] tos {
            get {
                return this.tosField;
            }
            set {
                this.tosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public VaultingInfo vaultingInfo {
            get {
                return this.vaultingInfoField;
            }
            set {
                this.vaultingInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class CallbackInfo {
        
        private string signedDocumentUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string signedDocumentUrl {
            get {
                return this.signedDocumentUrlField;
            }
            set {
                this.signedDocumentUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class ExternalId {
        
        private string groupField;
        
        private string idField;
        
        private string namespaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class FileInfo {
        
        private byte[] fileField;
        
        private string fileNameField;
        
        private string formKeyField;
        
        private string libraryDocumentKeyField;
        
        private string libraryDocumentNameField;
        
        private string mimeTypeField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] file {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string formKey {
            get {
                return this.formKeyField;
            }
            set {
                this.formKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string libraryDocumentKey {
            get {
                return this.libraryDocumentKeyField;
            }
            set {
                this.libraryDocumentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string libraryDocumentName {
            get {
                return this.libraryDocumentNameField;
            }
            set {
                this.libraryDocumentNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class MergeFieldInfo {
        
        private MergeField[] mergeFieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public MergeField[] mergeFields {
            get {
                return this.mergeFieldsField;
            }
            set {
                this.mergeFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class MergeField {
        
        private string defaultValueField;
        
        private string fieldNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class RecipientInfo {
        
        private string emailField;
        
        private string faxField;
        
        private System.Nullable<RecipientRole> roleField;
        
        private bool roleFieldSpecified;
        
        private RecipientSecurityOption[] securityOptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<RecipientRole> role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool roleSpecified {
            get {
                return this.roleFieldSpecified;
            }
            set {
                this.roleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto18.api.echosign")]
        public RecipientSecurityOption[] securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                this.securityOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum RecipientRole {
        
        /// <remarks/>
        SIGNER,
        
        /// <remarks/>
        APPROVER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class RecipientSecurityOption {
        
        private System.Nullable<AuthenticationMethod> authenticationMethodField;
        
        private bool authenticationMethodFieldSpecified;
        
        private string passwordField;
        
        private PhoneInfo[] phoneInfosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AuthenticationMethod> authenticationMethod {
            get {
                return this.authenticationMethodField;
            }
            set {
                this.authenticationMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authenticationMethodSpecified {
            get {
                return this.authenticationMethodFieldSpecified;
            }
            set {
                this.authenticationMethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto19.api.echosign")]
        public PhoneInfo[] phoneInfos {
            get {
                return this.phoneInfosField;
            }
            set {
                this.phoneInfosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public enum AuthenticationMethod {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        INHERITED_FROM_DOCUMENT,
        
        /// <remarks/>
        PASSWORD,
        
        /// <remarks/>
        WEB_IDENTITY,
        
        /// <remarks/>
        KBA,
        
        /// <remarks/>
        PHONE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class PhoneInfo {
        
        private string countryCodeField;
        
        private string phoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum ReminderFrequency {
        
        /// <remarks/>
        DAILY_UNTIL_SIGNED,
        
        /// <remarks/>
        WEEKLY_UNTIL_SIGNED,
        
        /// <remarks/>
        NEVER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class SecurityOptions {
        
        private string externalPasswordField;
        
        private string internalPasswordField;
        
        private System.Nullable<AppliesTo> kbaProtectionField;
        
        private bool kbaProtectionFieldSpecified;
        
        private string openPasswordField;
        
        private System.Nullable<AppliesTo> passwordProtectionField;
        
        private bool passwordProtectionFieldSpecified;
        
        private bool protectOpenField;
        
        private bool protectOpenFieldSpecified;
        
        private System.Nullable<AppliesTo> webIdentityProtectionField;
        
        private bool webIdentityProtectionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalPassword {
            get {
                return this.externalPasswordField;
            }
            set {
                this.externalPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string internalPassword {
            get {
                return this.internalPasswordField;
            }
            set {
                this.internalPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AppliesTo> kbaProtection {
            get {
                return this.kbaProtectionField;
            }
            set {
                this.kbaProtectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kbaProtectionSpecified {
            get {
                return this.kbaProtectionFieldSpecified;
            }
            set {
                this.kbaProtectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string openPassword {
            get {
                return this.openPasswordField;
            }
            set {
                this.openPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AppliesTo> passwordProtection {
            get {
                return this.passwordProtectionField;
            }
            set {
                this.passwordProtectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool passwordProtectionSpecified {
            get {
                return this.passwordProtectionFieldSpecified;
            }
            set {
                this.passwordProtectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool protectOpen {
            get {
                return this.protectOpenField;
            }
            set {
                this.protectOpenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protectOpenSpecified {
            get {
                return this.protectOpenFieldSpecified;
            }
            set {
                this.protectOpenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AppliesTo> webIdentityProtection {
            get {
                return this.webIdentityProtectionField;
            }
            set {
                this.webIdentityProtectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool webIdentityProtectionSpecified {
            get {
                return this.webIdentityProtectionFieldSpecified;
            }
            set {
                this.webIdentityProtectionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum AppliesTo {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        EXTERNAL_USERS,
        
        /// <remarks/>
        INTERNAL_USERS,
        
        /// <remarks/>
        ALL_USERS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum SignatureFlow {
        
        /// <remarks/>
        SENDER_SIGNS_LAST,
        
        /// <remarks/>
        SENDER_SIGNS_FIRST,
        
        /// <remarks/>
        SENDER_SIGNATURE_NOT_REQUIRED,
        
        /// <remarks/>
        SENDER_SIGNS_ONLY,
        
        /// <remarks/>
        SEQUENTIAL,
        
        /// <remarks/>
        PARALLEL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum SignatureType {
        
        /// <remarks/>
        ESIGN,
        
        /// <remarks/>
        WRITTEN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class VaultingInfo {
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        /// <remarks/>
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GetUsersInGroupResult {
        
        private UserInfo[] userListForGroupField;
        
        private System.Nullable<GetUsersInGroupResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public UserInfo[] userListForGroup {
            get {
                return this.userListForGroupField;
            }
            set {
                this.userListForGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetUsersInGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class UserInfo {
        
        private string groupKeyField;
        
        private string companyField;
        
        private string emailField;
        
        private string fullNameOrEmailField;
        
        private string userKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                this.groupKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fullNameOrEmail {
            get {
                return this.fullNameOrEmailField;
            }
            set {
                this.fullNameOrEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userKey {
            get {
                return this.userKeyField;
            }
            set {
                this.userKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public enum GetUsersInGroupResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_GROUP_KEY,
        
        /// <remarks/>
        TERMS_NOT_ACCEPTED,
        
        /// <remarks/>
        NOT_IN_ACCOUNT,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GetUsersInAccountResult {
        
        private UserInfo[] userListForAccountField;
        
        private System.Nullable<GetUsersInAccountResultCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public UserInfo[] userListForAccount {
            get {
                return this.userListForAccountField;
            }
            set {
                this.userListForAccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetUsersInAccountResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum GetUsersInAccountResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class UserData {
        
        private string accountField;
        
        private System.Nullable<AccountType> accountTypeField;
        
        private bool accountTypeFieldSpecified;
        
        private System.Nullable<UserCapabilityFlag>[] capabilityFlagsField;
        
        private string channelField;
        
        private string companyField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string groupField;
        
        private string initialsField;
        
        private string lastNameField;
        
        private string localeField;
        
        private System.DateTime passwordExpirationField;
        
        private bool passwordExpirationFieldSpecified;
        
        private string phoneField;
        
        private System.Nullable<UserRole>[] rolesField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AccountType> accountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountTypeSpecified {
            get {
                return this.accountTypeFieldSpecified;
            }
            set {
                this.accountTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<UserCapabilityFlag>[] capabilityFlags {
            get {
                return this.capabilityFlagsField;
            }
            set {
                this.capabilityFlagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string initials {
            get {
                return this.initialsField;
            }
            set {
                this.initialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime passwordExpiration {
            get {
                return this.passwordExpirationField;
            }
            set {
                this.passwordExpirationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool passwordExpirationSpecified {
            get {
                return this.passwordExpirationFieldSpecified;
            }
            set {
                this.passwordExpirationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<UserRole>[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto7.api.echosign")]
    public enum AccountType {
        
        /// <remarks/>
        FREE,
        
        /// <remarks/>
        PRO,
        
        /// <remarks/>
        TEAM,
        
        /// <remarks/>
        TEAM_TRIAL,
        
        /// <remarks/>
        ENTERPRISE,
        
        /// <remarks/>
        ENTERPRISE_TRIAL,
        
        /// <remarks/>
        GLOBAL,
        
        /// <remarks/>
        GLOBAL_TRIAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public enum UserCapabilityFlag {
        
        /// <remarks/>
        CAN_SEND,
        
        /// <remarks/>
        CAN_SIGN,
        
        /// <remarks/>
        CAN_REPLACE_SIGNER,
        
        /// <remarks/>
        VAULT_ENABLED,
        
        /// <remarks/>
        VAULT_PER_AGREEMENT,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public enum UserRole {
        
        /// <remarks/>
        API,
        
        /// <remarks/>
        GROUP_ADMIN,
        
        /// <remarks/>
        ACCOUNT_ADMIN,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class GetUserInfoResult {
        
        private UserData dataField;
        
        private System.Nullable<GetUserInfoResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UserData data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetUserInfoResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public enum GetUserInfoResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_EMAIL,
        
        /// <remarks/>
        NO_PERMISSION,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class GetUserInfoOptions {
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GetSupportingDocumentsResult {
        
        private SupportingDocument[] supportingDocumentsField;
        
        private System.Nullable<GetSupportingDocumentsResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SupportingDocument[] supportingDocuments {
            get {
                return this.supportingDocumentsField;
            }
            set {
                this.supportingDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetSupportingDocumentsResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class SupportingDocument {
        
        private string supportingDocumentKeyField;
        
        private byte[] contentField;
        
        private string displayLabelField;
        
        private string fieldNameField;
        
        private string mimeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string supportingDocumentKey {
            get {
                return this.supportingDocumentKeyField;
            }
            set {
                this.supportingDocumentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string displayLabel {
            get {
                return this.displayLabelField;
            }
            set {
                this.displayLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum GetSupportingDocumentsResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
        
        /// <remarks/>
        DOCUMENT_NOT_AVAILABLE,
        
        /// <remarks/>
        DOCUMENT_ORIGINAL_FORMAT_NOT_ALLOWED,
        
        /// <remarks/>
        TERMS_OF_USE_NOT_ACCEPTED,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class GetSupportingDocumentsOptions {
        
        private System.Nullable<SupportingDocumentContentFormat> documentFormatRequestedField;
        
        private bool documentFormatRequestedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SupportingDocumentContentFormat> documentFormatRequested {
            get {
                return this.documentFormatRequestedField;
            }
            set {
                this.documentFormatRequestedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentFormatRequestedSpecified {
            get {
                return this.documentFormatRequestedFieldSpecified;
            }
            set {
                this.documentFormatRequestedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum SupportingDocumentContentFormat {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        ORIGINAL,
        
        /// <remarks/>
        CONVERTED_PDF,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class SigningUrl {
        
        private string emailField;
        
        private string esignUrlField;
        
        private string simpleEsignUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string esignUrl {
            get {
                return this.esignUrlField;
            }
            set {
                this.esignUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string simpleEsignUrl {
            get {
                return this.simpleEsignUrlField;
            }
            set {
                this.simpleEsignUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class SigningUrlResult {
        
        private System.Nullable<SigningUrlResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private SigningUrl[] signingUrlsField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SigningUrlResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto9.api.echosign")]
        public SigningUrl[] signingUrls {
            get {
                return this.signingUrlsField;
            }
            set {
                this.signingUrlsField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum SigningUrlResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
        
        /// <remarks/>
        DOCUMENT_NOT_SIGNABLE,
        
        /// <remarks/>
        DOCUMENT_NOT_VISIBLE,
        
        /// <remarks/>
        DOCUMENT_NOT_EXPOSED,
        
        /// <remarks/>
        DOCUMENT_ALREADY_SIGNED,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class SignerFormFieldLocation {
        
        private double heightField;
        
        private bool heightFieldSpecified;
        
        private double leftField;
        
        private bool leftFieldSpecified;
        
        private int pageNumberField;
        
        private bool pageNumberFieldSpecified;
        
        private double topField;
        
        private bool topFieldSpecified;
        
        private double widthField;
        
        private bool widthFieldSpecified;
        
        /// <remarks/>
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leftSpecified {
            get {
                return this.leftFieldSpecified;
            }
            set {
                this.leftFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int pageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageNumberSpecified {
            get {
                return this.pageNumberFieldSpecified;
            }
            set {
                this.pageNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topSpecified {
            get {
                return this.topFieldSpecified;
            }
            set {
                this.topFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool widthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class SignerFormFieldCondition {
        
        private string fieldNameField;
        
        private System.Nullable<Operator> operatorField;
        
        private bool operatorFieldSpecified;
        
        private string valueField;
        
        private int whenFieldLocationIndexField;
        
        private bool whenFieldLocationIndexFieldSpecified;
        
        private string whenFieldNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Operator> @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatorSpecified {
            get {
                return this.operatorFieldSpecified;
            }
            set {
                this.operatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public int whenFieldLocationIndex {
            get {
                return this.whenFieldLocationIndexField;
            }
            set {
                this.whenFieldLocationIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool whenFieldLocationIndexSpecified {
            get {
                return this.whenFieldLocationIndexFieldSpecified;
            }
            set {
                this.whenFieldLocationIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string whenFieldName {
            get {
                return this.whenFieldNameField;
            }
            set {
                this.whenFieldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum Operator {
        
        /// <remarks/>
        EQUALS,
        
        /// <remarks/>
        NOT_EQUALS,
        
        /// <remarks/>
        LESS_THAN,
        
        /// <remarks/>
        LESS_THAN_EQUALS,
        
        /// <remarks/>
        GREATER_THAN,
        
        /// <remarks/>
        GREATER_THAN_EQUALS,
        
        /// <remarks/>
        IN,
        
        /// <remarks/>
        NOT_IN,
        
        /// <remarks/>
        CONTAINS,
        
        /// <remarks/>
        NOT_CONTAINS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class SignerFormField {
        
        private System.Nullable<TextAlignment> alignmentField;
        
        private bool alignmentFieldSpecified;
        
        private System.Nullable<AnyAll> anyOrAllField;
        
        private bool anyOrAllFieldSpecified;
        
        private string backgroundColorField;
        
        private string borderColorField;
        
        private System.Nullable<BorderStyle> borderStyleField;
        
        private bool borderStyleFieldSpecified;
        
        private float borderWidthField;
        
        private bool borderWidthFieldSpecified;
        
        private string calculatedExpressionField;
        
        private SignerFormFieldCondition[] conditionsField;
        
        private System.Nullable<ContentType> contentTypeField;
        
        private bool contentTypeFieldSpecified;
        
        private string defaultValueField;
        
        private string displayFormatField;
        
        private System.Nullable<DisplayFormatType> displayFormatTypeField;
        
        private bool displayFormatTypeFieldSpecified;
        
        private string displayLabelField;
        
        private string fontColorField;
        
        private string fontNameField;
        
        private float fontSizeField;
        
        private bool fontSizeFieldSpecified;
        
        private bool hiddenField;
        
        private bool hiddenFieldSpecified;
        
        private string[] hiddenOptionsField;
        
        private System.Nullable<InputType> inputTypeField;
        
        private bool inputTypeFieldSpecified;
        
        private SignerFormFieldLocation[] locationsField;
        
        private bool maskedField;
        
        private bool maskedFieldSpecified;
        
        private int maxLengthField;
        
        private bool maxLengthFieldSpecified;
        
        private double maxNumberValueField;
        
        private bool maxNumberValueFieldSpecified;
        
        private int minLengthField;
        
        private bool minLengthFieldSpecified;
        
        private double minNumberValueField;
        
        private bool minNumberValueFieldSpecified;
        
        private string nameField;
        
        private System.Nullable<RadioCheckType> radioCheckTypeField;
        
        private bool radioCheckTypeFieldSpecified;
        
        private bool readOnlyField;
        
        private bool readOnlyFieldSpecified;
        
        private string regularExpressionField;
        
        private bool requiredField;
        
        private bool requiredFieldSpecified;
        
        private System.Nullable<ShowHide> showOrHideField;
        
        private bool showOrHideFieldSpecified;
        
        private string specialErrMsgField;
        
        private string specialFormulaField;
        
        private string tooltipField;
        
        private string validationRuleField;
        
        private string[] visibleOptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<TextAlignment> alignment {
            get {
                return this.alignmentField;
            }
            set {
                this.alignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alignmentSpecified {
            get {
                return this.alignmentFieldSpecified;
            }
            set {
                this.alignmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AnyAll> anyOrAll {
            get {
                return this.anyOrAllField;
            }
            set {
                this.anyOrAllField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool anyOrAllSpecified {
            get {
                return this.anyOrAllFieldSpecified;
            }
            set {
                this.anyOrAllFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string backgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string borderColor {
            get {
                return this.borderColorField;
            }
            set {
                this.borderColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<BorderStyle> borderStyle {
            get {
                return this.borderStyleField;
            }
            set {
                this.borderStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool borderStyleSpecified {
            get {
                return this.borderStyleFieldSpecified;
            }
            set {
                this.borderStyleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float borderWidth {
            get {
                return this.borderWidthField;
            }
            set {
                this.borderWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool borderWidthSpecified {
            get {
                return this.borderWidthFieldSpecified;
            }
            set {
                this.borderWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string calculatedExpression {
            get {
                return this.calculatedExpressionField;
            }
            set {
                this.calculatedExpressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SignerFormFieldCondition[] conditions {
            get {
                return this.conditionsField;
            }
            set {
                this.conditionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ContentType> contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contentTypeSpecified {
            get {
                return this.contentTypeFieldSpecified;
            }
            set {
                this.contentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string displayFormat {
            get {
                return this.displayFormatField;
            }
            set {
                this.displayFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DisplayFormatType> displayFormatType {
            get {
                return this.displayFormatTypeField;
            }
            set {
                this.displayFormatTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayFormatTypeSpecified {
            get {
                return this.displayFormatTypeFieldSpecified;
            }
            set {
                this.displayFormatTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string displayLabel {
            get {
                return this.displayLabelField;
            }
            set {
                this.displayLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fontColor {
            get {
                return this.fontColorField;
            }
            set {
                this.fontColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
        /// <remarks/>
        public float fontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fontSizeSpecified {
            get {
                return this.fontSizeFieldSpecified;
            }
            set {
                this.fontSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool hidden {
            get {
                return this.hiddenField;
            }
            set {
                this.hiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hiddenSpecified {
            get {
                return this.hiddenFieldSpecified;
            }
            set {
                this.hiddenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://api.echosign")]
        public string[] hiddenOptions {
            get {
                return this.hiddenOptionsField;
            }
            set {
                this.hiddenOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<InputType> inputType {
            get {
                return this.inputTypeField;
            }
            set {
                this.inputTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inputTypeSpecified {
            get {
                return this.inputTypeFieldSpecified;
            }
            set {
                this.inputTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SignerFormFieldLocation[] locations {
            get {
                return this.locationsField;
            }
            set {
                this.locationsField = value;
            }
        }
        
        /// <remarks/>
        public bool masked {
            get {
                return this.maskedField;
            }
            set {
                this.maskedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maskedSpecified {
            get {
                return this.maskedFieldSpecified;
            }
            set {
                this.maskedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int maxLength {
            get {
                return this.maxLengthField;
            }
            set {
                this.maxLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxLengthSpecified {
            get {
                return this.maxLengthFieldSpecified;
            }
            set {
                this.maxLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double maxNumberValue {
            get {
                return this.maxNumberValueField;
            }
            set {
                this.maxNumberValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxNumberValueSpecified {
            get {
                return this.maxNumberValueFieldSpecified;
            }
            set {
                this.maxNumberValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int minLength {
            get {
                return this.minLengthField;
            }
            set {
                this.minLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minLengthSpecified {
            get {
                return this.minLengthFieldSpecified;
            }
            set {
                this.minLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double minNumberValue {
            get {
                return this.minNumberValueField;
            }
            set {
                this.minNumberValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minNumberValueSpecified {
            get {
                return this.minNumberValueFieldSpecified;
            }
            set {
                this.minNumberValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<RadioCheckType> radioCheckType {
            get {
                return this.radioCheckTypeField;
            }
            set {
                this.radioCheckTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool radioCheckTypeSpecified {
            get {
                return this.radioCheckTypeFieldSpecified;
            }
            set {
                this.radioCheckTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool readOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readOnlySpecified {
            get {
                return this.readOnlyFieldSpecified;
            }
            set {
                this.readOnlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string regularExpression {
            get {
                return this.regularExpressionField;
            }
            set {
                this.regularExpressionField = value;
            }
        }
        
        /// <remarks/>
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requiredSpecified {
            get {
                return this.requiredFieldSpecified;
            }
            set {
                this.requiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ShowHide> showOrHide {
            get {
                return this.showOrHideField;
            }
            set {
                this.showOrHideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showOrHideSpecified {
            get {
                return this.showOrHideFieldSpecified;
            }
            set {
                this.showOrHideFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string specialErrMsg {
            get {
                return this.specialErrMsgField;
            }
            set {
                this.specialErrMsgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string specialFormula {
            get {
                return this.specialFormulaField;
            }
            set {
                this.specialFormulaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string tooltip {
            get {
                return this.tooltipField;
            }
            set {
                this.tooltipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string validationRule {
            get {
                return this.validationRuleField;
            }
            set {
                this.validationRuleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://api.echosign")]
        public string[] visibleOptions {
            get {
                return this.visibleOptionsField;
            }
            set {
                this.visibleOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum TextAlignment {
        
        /// <remarks/>
        LEFT,
        
        /// <remarks/>
        RIGHT,
        
        /// <remarks/>
        CENTER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum AnyAll {
        
        /// <remarks/>
        ANY,
        
        /// <remarks/>
        ALL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum BorderStyle {
        
        /// <remarks/>
        SOLID,
        
        /// <remarks/>
        DASHED,
        
        /// <remarks/>
        BEVELED,
        
        /// <remarks/>
        INSET,
        
        /// <remarks/>
        UNDERLINE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum ContentType {
        
        /// <remarks/>
        DATA,
        
        /// <remarks/>
        SIGNATURE_BLOCK,
        
        /// <remarks/>
        SIGNATURE,
        
        /// <remarks/>
        SIGNER_NAME,
        
        /// <remarks/>
        SIGNER_FIRST_NAME,
        
        /// <remarks/>
        SIGNER_LAST_NAME,
        
        /// <remarks/>
        SIGNER_INITIALS,
        
        /// <remarks/>
        SIGNER_EMAIL,
        
        /// <remarks/>
        SIGNER_TITLE,
        
        /// <remarks/>
        SIGNER_COMPANY,
        
        /// <remarks/>
        SIGNATURE_DATE,
        
        /// <remarks/>
        AGREEMENT_NAME,
        
        /// <remarks/>
        AGREEMENT_MESSAGE,
        
        /// <remarks/>
        TRANSACTION_ID,
        
        /// <remarks/>
        SIGNATURE_STAMP,
        
        /// <remarks/>
        CALC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum DisplayFormatType {
        
        /// <remarks/>
        DEFAULT,
        
        /// <remarks/>
        DATE,
        
        /// <remarks/>
        NUMBER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum InputType {
        
        /// <remarks/>
        TEXT_FIELD,
        
        /// <remarks/>
        MULTILINE,
        
        /// <remarks/>
        PASSWORD,
        
        /// <remarks/>
        RADIO,
        
        /// <remarks/>
        CHECKBOX,
        
        /// <remarks/>
        DROP_DOWN,
        
        /// <remarks/>
        LISTBOX,
        
        /// <remarks/>
        SIGNATURE,
        
        /// <remarks/>
        PDF_SIGNATURE,
        
        /// <remarks/>
        BUTTON,
        
        /// <remarks/>
        BLOCK,
        
        /// <remarks/>
        FILE_CHOOSER,
        
        /// <remarks/>
        COMB,
        
        /// <remarks/>
        UNSUPPORTED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum RadioCheckType {
        
        /// <remarks/>
        CIRCLE,
        
        /// <remarks/>
        CHECK,
        
        /// <remarks/>
        CROSS,
        
        /// <remarks/>
        DIAMOND,
        
        /// <remarks/>
        SQUARE,
        
        /// <remarks/>
        STAR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum ShowHide {
        
        /// <remarks/>
        SHOW,
        
        /// <remarks/>
        HIDE,
        
        /// <remarks/>
        DISABLE,
        
        /// <remarks/>
        ENABLE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class FormValue {
        
        private System.Nullable<InputType> fieldInputTypeField;
        
        private bool fieldInputTypeFieldSpecified;
        
        private string fieldNameField;
        
        private string fieldValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<InputType> fieldInputType {
            get {
                return this.fieldInputTypeField;
            }
            set {
                this.fieldInputTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fieldInputTypeSpecified {
            get {
                return this.fieldInputTypeFieldSpecified;
            }
            set {
                this.fieldInputTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldValue {
            get {
                return this.fieldValueField;
            }
            set {
                this.fieldValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class GetSignerFormFieldsResult {
        
        private System.Nullable<GetSignerFormFieldsResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private FormValue[] formValuesForConditionalsAndCalculationsField;
        
        private string localeField;
        
        private string[] orderedCalculatedFieldNamesField;
        
        private string[] orderedConditionalFieldNamesField;
        
        private string signerField;
        
        private SignerFormField[] signerFormFieldsField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetSignerFormFieldsResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public FormValue[] formValuesForConditionalsAndCalculations {
            get {
                return this.formValuesForConditionalsAndCalculationsField;
            }
            set {
                this.formValuesForConditionalsAndCalculationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://api.echosign")]
        public string[] orderedCalculatedFieldNames {
            get {
                return this.orderedCalculatedFieldNamesField;
            }
            set {
                this.orderedCalculatedFieldNamesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://api.echosign")]
        public string[] orderedConditionalFieldNames {
            get {
                return this.orderedConditionalFieldNamesField;
            }
            set {
                this.orderedConditionalFieldNamesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string signer {
            get {
                return this.signerField;
            }
            set {
                this.signerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SignerFormField[] signerFormFields {
            get {
                return this.signerFormFieldsField;
            }
            set {
                this.signerFormFieldsField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum GetSignerFormFieldsResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
        
        /// <remarks/>
        DOCUMENT_ALREADY_SIGNED,
        
        /// <remarks/>
        DOCUMENT_NOT_SIGNABLE,
        
        /// <remarks/>
        INVALID_SIGNER_EMAIL,
        
        /// <remarks/>
        ALREADY_CANCELLED,
        
        /// <remarks/>
        ALREADY_SIGNED,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class GetSignerFormFieldsOptions {
        
        private string signerEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string signerEmail {
            get {
                return this.signerEmailField;
            }
            set {
                this.signerEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class WidgetItem {
        
        private string documentKeyField;
        
        private System.Nullable<ReusableDocumentStatus> reusableDocumentStatusField;
        
        private bool reusableDocumentStatusFieldSpecified;
        
        private string javascriptField;
        
        private System.DateTime modifiedDateField;
        
        private bool modifiedDateFieldSpecified;
        
        private string nameField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ReusableDocumentStatus> reusableDocumentStatus {
            get {
                return this.reusableDocumentStatusField;
            }
            set {
                this.reusableDocumentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reusableDocumentStatusSpecified {
            get {
                return this.reusableDocumentStatusFieldSpecified;
            }
            set {
                this.reusableDocumentStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string javascript {
            get {
                return this.javascriptField;
            }
            set {
                this.javascriptField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modifiedDateSpecified {
            get {
                return this.modifiedDateFieldSpecified;
            }
            set {
                this.modifiedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public enum ReusableDocumentStatus {
        
        /// <remarks/>
        ENABLED,
        
        /// <remarks/>
        DISABLED,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GetWidgetsForUserResult {
        
        private WidgetItem[] widgetsField;
        
        private System.Nullable<GetWidgetsForUserErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WidgetItem[] widgets {
            get {
                return this.widgetsField;
            }
            set {
                this.widgetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetWidgetsForUserErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto10.api.echosign")]
    public enum GetWidgetsForUserErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_USER_CREDENTIALS,
        
        /// <remarks/>
        PERMISSION_DENIED,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class GetMegaSignDocumentResult {
        
        private DocumentListItem[] documentsField;
        
        private System.Nullable<GetMegaSignDocumentResultCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentListItem[] documents {
            get {
                return this.documentsField;
            }
            set {
                this.documentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetMegaSignDocumentResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class DocumentListItem {
        
        private System.Nullable<DocumentListItemUserDocumentStatus> userDocumentStatusField;
        
        private bool userDocumentStatusFieldSpecified;
        
        private string documentKeyField;
        
        private string latestDocumentKeyField;
        
        private System.DateTime displayDateField;
        
        private bool displayDateFieldSpecified;
        
        private DisplayUserInfo displayUserInfoField;
        
        private bool esignField;
        
        private bool esignFieldSpecified;
        
        private bool megaSignField;
        
        private bool megaSignFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DocumentListItemUserDocumentStatus> userDocumentStatus {
            get {
                return this.userDocumentStatusField;
            }
            set {
                this.userDocumentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userDocumentStatusSpecified {
            get {
                return this.userDocumentStatusFieldSpecified;
            }
            set {
                this.userDocumentStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string latestDocumentKey {
            get {
                return this.latestDocumentKeyField;
            }
            set {
                this.latestDocumentKeyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime displayDate {
            get {
                return this.displayDateField;
            }
            set {
                this.displayDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayDateSpecified {
            get {
                return this.displayDateFieldSpecified;
            }
            set {
                this.displayDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DisplayUserInfo displayUserInfo {
            get {
                return this.displayUserInfoField;
            }
            set {
                this.displayUserInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool esign {
            get {
                return this.esignField;
            }
            set {
                this.esignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool esignSpecified {
            get {
                return this.esignFieldSpecified;
            }
            set {
                this.esignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool megaSign {
            get {
                return this.megaSignField;
            }
            set {
                this.megaSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool megaSignSpecified {
            get {
                return this.megaSignFieldSpecified;
            }
            set {
                this.megaSignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum DocumentListItemUserDocumentStatus {
        
        /// <remarks/>
        WAITING_FOR_MY_SIGNATURE,
        
        /// <remarks/>
        WAITING_FOR_MY_APPROVAL,
        
        /// <remarks/>
        OUT_FOR_SIGNATURE,
        
        /// <remarks/>
        OUT_FOR_APPROVAL,
        
        /// <remarks/>
        SIGNED,
        
        /// <remarks/>
        APPROVED,
        
        /// <remarks/>
        RECALLED,
        
        /// <remarks/>
        WAITING_FOR_FAXIN,
        
        /// <remarks/>
        ARCHIVED,
        
        /// <remarks/>
        FORM,
        
        /// <remarks/>
        EXPIRED,
        
        /// <remarks/>
        WIDGET,
        
        /// <remarks/>
        WAITING_FOR_AUTHORING,
        
        /// <remarks/>
        SIGNED_IN_ADOBE_ACROBAT,
        
        /// <remarks/>
        SIGNED_IN_ADOBE_READER,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class DisplayUserInfo {
        
        private string companyField;
        
        private string fullNameOrEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fullNameOrEmail {
            get {
                return this.fullNameOrEmailField;
            }
            set {
                this.fullNameOrEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum GetMegaSignDocumentResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        PERMISSION_DENIED,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        NOT_MEGASIGN,
        
        /// <remarks/>
        EXPIRED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class DocumentLibraryItem {
        
        private System.Nullable<LibraryTemplateType>[] libraryTemplateTypesField;
        
        private string documentKeyField;
        
        private System.DateTime modifiedDateField;
        
        private bool modifiedDateFieldSpecified;
        
        private string nameField;
        
        private System.Nullable<DocumentLibraryItemScope> scopeField;
        
        private bool scopeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<LibraryTemplateType>[] libraryTemplateTypes {
            get {
                return this.libraryTemplateTypesField;
            }
            set {
                this.libraryTemplateTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modifiedDateSpecified {
            get {
                return this.modifiedDateFieldSpecified;
            }
            set {
                this.modifiedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DocumentLibraryItemScope> scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scopeSpecified {
            get {
                return this.scopeFieldSpecified;
            }
            set {
                this.scopeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum LibraryTemplateType {
        
        /// <remarks/>
        DOCUMENT,
        
        /// <remarks/>
        FORM_FIELD_LAYER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public enum DocumentLibraryItemScope {
        
        /// <remarks/>
        PERSONAL,
        
        /// <remarks/>
        SHARED,
        
        /// <remarks/>
        GLOBAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class GetLibraryDocumentsForUserResult {
        
        private DocumentLibraryItem[] libraryDocumentsField;
        
        private System.Nullable<GetLibraryDocumentsForUserErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentLibraryItem[] libraryDocuments {
            get {
                return this.libraryDocumentsField;
            }
            set {
                this.libraryDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetLibraryDocumentsForUserErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public enum GetLibraryDocumentsForUserErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_USER_CREDENTIALS,
        
        /// <remarks/>
        PERMISSION_DENIED,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class DocumentPageImages {
        
        private string largeImageUrlField;
        
        private string mediumImageUrlField;
        
        private string smallImageUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string largeImageUrl {
            get {
                return this.largeImageUrlField;
            }
            set {
                this.largeImageUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mediumImageUrl {
            get {
                return this.mediumImageUrlField;
            }
            set {
                this.mediumImageUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string smallImageUrl {
            get {
                return this.smallImageUrlField;
            }
            set {
                this.smallImageUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class DocumentImageList {
        
        private System.Nullable<DocumentImageListErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private DocumentPageImages[] pageImagesField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DocumentImageListErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentPageImages[] pageImages {
            get {
                return this.pageImagesField;
            }
            set {
                this.pageImagesField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum DocumentImageListErrorCode {
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_VERSION_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
        
        /// <remarks/>
        IMAGES_NOT_AVAILABLE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GroupInfo {
        
        private string groupKeyField;
        
        private string groupNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                this.groupKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GetGroupsInAccountResult {
        
        private GroupInfo[] groupListField;
        
        private System.Nullable<GetGroupsInAccountResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public GroupInfo[] groupList {
            get {
                return this.groupListField;
            }
            set {
                this.groupListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetGroupsInAccountResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public enum GetGroupsInAccountResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        TERMS_NOT_ACCEPTED,
        
        /// <remarks/>
        NOT_IN_ACCOUNT,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto8.api.echosign")]
    public partial class GetFormDataResult {
        
        private System.Nullable<GetFormDataResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private string formDataCsvField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetFormDataResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string formDataCsv {
            get {
                return this.formDataCsvField;
            }
            set {
                this.formDataCsvField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto8.api.echosign")]
    public enum GetFormDataResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
        
        /// <remarks/>
        NO_FORM_DATA,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class GetEmbeddedViewResult {
        
        private System.Nullable<GetEmbeddedViewResultCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetEmbeddedViewResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum GetEmbeddedViewResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_ACCESS_TOKEN,
        
        /// <remarks/>
        INVALID_ON_BEHALF_OF_USER,
        
        /// <remarks/>
        INVALID_TARGET,
        
        /// <remarks/>
        INVALID_TARGET_OBJECT,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        PERMISSION_DENIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class EmbeddedViewOptions {
        
        private string embeddedViewObjectField;
        
        private System.Nullable<EmbeddedViewTarget> embeddedViewTargetField;
        
        private bool embeddedViewTargetFieldSpecified;
        
        private bool noChromeField;
        
        private bool noChromeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string embeddedViewObject {
            get {
                return this.embeddedViewObjectField;
            }
            set {
                this.embeddedViewObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<EmbeddedViewTarget> embeddedViewTarget {
            get {
                return this.embeddedViewTargetField;
            }
            set {
                this.embeddedViewTargetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool embeddedViewTargetSpecified {
            get {
                return this.embeddedViewTargetFieldSpecified;
            }
            set {
                this.embeddedViewTargetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool noChrome {
            get {
                return this.noChromeField;
            }
            set {
                this.noChromeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool noChromeSpecified {
            get {
                return this.noChromeFieldSpecified;
            }
            set {
                this.noChromeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum EmbeddedViewTarget {
        
        /// <remarks/>
        AGREEMENT,
        
        /// <remarks/>
        AGREEMENT_LIST,
        
        /// <remarks/>
        USER_PROFILE,
        
        /// <remarks/>
        ACCOUNT_SETTINGS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class OnBehalfOfUser {
        
        private string emailField;
        
        private string userKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userKey {
            get {
                return this.userKeyField;
            }
            set {
                this.userKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class GetDocumentsForUserResult {
        
        private DocumentListItem[] documentListForUserField;
        
        private System.Nullable<GetDocumentsForUserResultCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentListItem[] documentListForUser {
            get {
                return this.documentListForUserField;
            }
            set {
                this.documentListForUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetDocumentsForUserResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum GetDocumentsForUserResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_USER_CREDENTIALS,
        
        /// <remarks/>
        INVALID_USER_KEY,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        PERMISSION_DENIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class DocumentContent {
        
        private byte[] bytesField;
        
        private string mimetypeField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] bytes {
            get {
                return this.bytesField;
            }
            set {
                this.bytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mimetype {
            get {
                return this.mimetypeField;
            }
            set {
                this.mimetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GetDocumentsResult {
        
        private SupportingDocument[] supportingDocumentsField;
        
        private DocumentContent[] documentsField;
        
        private System.Nullable<GetDocumentsErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SupportingDocument[] supportingDocuments {
            get {
                return this.supportingDocumentsField;
            }
            set {
                this.supportingDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto14.api.echosign")]
        public DocumentContent[] documents {
            get {
                return this.documentsField;
            }
            set {
                this.documentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetDocumentsErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum GetDocumentsErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_VERSION_KEY,
        
        /// <remarks/>
        INVALID_PARTICIPANT,
        
        /// <remarks/>
        DOCUMENT_NOT_AVAILABLE,
        
        /// <remarks/>
        DOCUMENT_NOT_EXPOSED,
        
        /// <remarks/>
        DOCUMENT_REMOVED,
        
        /// <remarks/>
        DOCUMENT_DELETED,
        
        /// <remarks/>
        INTERNAL_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class GetDocumentsOptions {
        
        private bool attachSupportingDocumentsField;
        
        private bool attachSupportingDocumentsFieldSpecified;
        
        private bool auditReportField;
        
        private bool auditReportFieldSpecified;
        
        private bool combineField;
        
        private bool combineFieldSpecified;
        
        private string participantEmailField;
        
        private string versionKeyField;
        
        /// <remarks/>
        public bool attachSupportingDocuments {
            get {
                return this.attachSupportingDocumentsField;
            }
            set {
                this.attachSupportingDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attachSupportingDocumentsSpecified {
            get {
                return this.attachSupportingDocumentsFieldSpecified;
            }
            set {
                this.attachSupportingDocumentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool auditReport {
            get {
                return this.auditReportField;
            }
            set {
                this.auditReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool auditReportSpecified {
            get {
                return this.auditReportFieldSpecified;
            }
            set {
                this.auditReportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool combine {
            get {
                return this.combineField;
            }
            set {
                this.combineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool combineSpecified {
            get {
                return this.combineFieldSpecified;
            }
            set {
                this.combineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                this.participantEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string versionKey {
            get {
                return this.versionKeyField;
            }
            set {
                this.versionKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class DocumentUrl {
        
        private string nameField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class SupportingDocumentUrl {
        
        private string fieldNameField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class GetDocumentUrlsResult {
        
        private System.Nullable<GetDocumentUrlsErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        private SupportingDocumentUrl[] supportingDocumentUrlsField;
        
        private DocumentUrl[] urlsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetDocumentUrlsErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SupportingDocumentUrl[] supportingDocumentUrls {
            get {
                return this.supportingDocumentUrlsField;
            }
            set {
                this.supportingDocumentUrlsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentUrl[] urls {
            get {
                return this.urlsField;
            }
            set {
                this.urlsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum GetDocumentUrlsErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_VERSION_KEY,
        
        /// <remarks/>
        INVALID_PARTICIPANT,
        
        /// <remarks/>
        DOCUMENT_NOT_AVAILABLE,
        
        /// <remarks/>
        DOCUMENT_NOT_EXPOSED,
        
        /// <remarks/>
        DOCUMENT_REMOVED,
        
        /// <remarks/>
        DOCUMENT_DELETED,
        
        /// <remarks/>
        INTERNAL_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class GetDocumentUrlsOptions {
        
        private bool attachSupportingDocumentsField;
        
        private bool attachSupportingDocumentsFieldSpecified;
        
        private bool auditReportField;
        
        private bool auditReportFieldSpecified;
        
        private bool combineField;
        
        private bool combineFieldSpecified;
        
        private string participantEmailField;
        
        private string versionKeyField;
        
        /// <remarks/>
        public bool attachSupportingDocuments {
            get {
                return this.attachSupportingDocumentsField;
            }
            set {
                this.attachSupportingDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attachSupportingDocumentsSpecified {
            get {
                return this.attachSupportingDocumentsFieldSpecified;
            }
            set {
                this.attachSupportingDocumentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool auditReport {
            get {
                return this.auditReportField;
            }
            set {
                this.auditReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool auditReportSpecified {
            get {
                return this.auditReportFieldSpecified;
            }
            set {
                this.auditReportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool combine {
            get {
                return this.combineField;
            }
            set {
                this.combineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool combineSpecified {
            get {
                return this.combineFieldSpecified;
            }
            set {
                this.combineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                this.participantEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string versionKey {
            get {
                return this.versionKeyField;
            }
            set {
                this.versionKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class DocumentUrlResult {
        
        private System.Nullable<DocumentUrlErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DocumentUrlErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum DocumentUrlErrorCode {
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_VERSION_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class DocumentPageInfo {
        
        private double heightField;
        
        private bool heightFieldSpecified;
        
        private int pageNumberField;
        
        private bool pageNumberFieldSpecified;
        
        private int rotationField;
        
        private bool rotationFieldSpecified;
        
        private double widthField;
        
        private bool widthFieldSpecified;
        
        /// <remarks/>
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int pageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageNumberSpecified {
            get {
                return this.pageNumberFieldSpecified;
            }
            set {
                this.pageNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotationSpecified {
            get {
                return this.rotationFieldSpecified;
            }
            set {
                this.rotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool widthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class GetDocumentPagesInfoResult {
        
        private DocumentPageInfo[] documentPagesInfoField;
        
        private System.Nullable<GetDocumentPagesInfoResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentPageInfo[] documentPagesInfo {
            get {
                return this.documentPagesInfoField;
            }
            set {
                this.documentPagesInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetDocumentPagesInfoResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum GetDocumentPagesInfoResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class DocumentInfoList {
        
        private DocumentInfo[] documentInfosField;
        
        private System.Nullable<DocumentInfoListErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentInfo[] documentInfos {
            get {
                return this.documentInfosField;
            }
            set {
                this.documentInfosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DocumentInfoListErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class DocumentInfo {
        
        private ParticipantInfo[] participantsField;
        
        private DocumentHistoryEvent[] eventsField;
        
        private System.Nullable<AgreementStatus> statusField;
        
        private bool statusFieldSpecified;
        
        private string documentKeyField;
        
        private string latestDocumentKeyField;
        
        private System.DateTime expirationField;
        
        private bool expirationFieldSpecified;
        
        private string localeField;
        
        private string messageField;
        
        private string nameField;
        
        private NextParticipantInfo[] nextParticipantInfosField;
        
        private System.Nullable<SecurityOption>[] securityOptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ParticipantInfo[] participants {
            get {
                return this.participantsField;
            }
            set {
                this.participantsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto18.api.echosign")]
        public DocumentHistoryEvent[] events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AgreementStatus> status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string latestDocumentKey {
            get {
                return this.latestDocumentKeyField;
            }
            set {
                this.latestDocumentKeyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationSpecified {
            get {
                return this.expirationFieldSpecified;
            }
            set {
                this.expirationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto9.api.echosign")]
        public NextParticipantInfo[] nextParticipantInfos {
            get {
                return this.nextParticipantInfosField;
            }
            set {
                this.nextParticipantInfosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto13.api.echosign")]
        public System.Nullable<SecurityOption>[] securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                this.securityOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public partial class ParticipantInfo {
        
        private ParticipantInfo[] alternateParticipantsField;
        
        private System.Nullable<ParticipantRole>[] rolesField;
        
        private System.Nullable<ParticipantSecurityOption>[] securityOptionsField;
        
        private System.Nullable<UserAgreementStatus> statusField;
        
        private bool statusFieldSpecified;
        
        private string companyField;
        
        private string emailField;
        
        private string nameField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ParticipantInfo[] alternateParticipants {
            get {
                return this.alternateParticipantsField;
            }
            set {
                this.alternateParticipantsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<ParticipantRole>[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<ParticipantSecurityOption>[] securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                this.securityOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<UserAgreementStatus> status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum ParticipantRole {
        
        /// <remarks/>
        SENDER,
        
        /// <remarks/>
        SIGNER,
        
        /// <remarks/>
        APPROVER,
        
        /// <remarks/>
        CC,
        
        /// <remarks/>
        DELEGATE,
        
        /// <remarks/>
        SHARE,
        
        /// <remarks/>
        WIDGET_SIGNER,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto19.api.echosign")]
    public enum ParticipantSecurityOption {
        
        /// <remarks/>
        PASSWORD,
        
        /// <remarks/>
        WEB_IDENTITY,
        
        /// <remarks/>
        KBA,
        
        /// <remarks/>
        PHONE,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum UserAgreementStatus {
        
        /// <remarks/>
        WAITING_FOR_MY_SIGNATURE,
        
        /// <remarks/>
        WAITING_FOR_MY_APPROVAL,
        
        /// <remarks/>
        OUT_FOR_SIGNATURE,
        
        /// <remarks/>
        SIGNED,
        
        /// <remarks/>
        APPROVED,
        
        /// <remarks/>
        RECALLED,
        
        /// <remarks/>
        HIDDEN,
        
        /// <remarks/>
        NOT_YET_VISIBLE,
        
        /// <remarks/>
        WAITING_FOR_FAXIN,
        
        /// <remarks/>
        ARCHIVED,
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        PARTIAL,
        
        /// <remarks/>
        FORM,
        
        /// <remarks/>
        WAITING_FOR_AUTHORING,
        
        /// <remarks/>
        OUT_FOR_APPROVAL,
        
        /// <remarks/>
        WIDGET,
        
        /// <remarks/>
        EXPIRED,
        
        /// <remarks/>
        WAITING_FOR_MY_REVIEW,
        
        /// <remarks/>
        IN_REVIEW,
        
        /// <remarks/>
        OTHER,
        
        /// <remarks/>
        SIGNED_IN_ADOBE_ACROBAT,
        
        /// <remarks/>
        SIGNED_IN_ADOBE_READER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class DocumentHistoryEvent {
        
        private System.Nullable<AgreementEventType> typeField;
        
        private bool typeFieldSpecified;
        
        private DeviceLocation deviceLocationField;
        
        private string documentVersionKeyField;
        
        private string synchronizationKeyField;
        
        private string actingUserIpAddressField;
        
        private string actingUserEmailField;
        
        private string commentField;
        
        private string participantEmailField;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AgreementEventType> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeviceLocation deviceLocation {
            get {
                return this.deviceLocationField;
            }
            set {
                this.deviceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentVersionKey {
            get {
                return this.documentVersionKeyField;
            }
            set {
                this.documentVersionKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string synchronizationKey {
            get {
                return this.synchronizationKeyField;
            }
            set {
                this.synchronizationKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string actingUserIpAddress {
            get {
                return this.actingUserIpAddressField;
            }
            set {
                this.actingUserIpAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string actingUserEmail {
            get {
                return this.actingUserEmailField;
            }
            set {
                this.actingUserEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                this.participantEmailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public enum AgreementEventType {
        
        /// <remarks/>
        CREATED,
        
        /// <remarks/>
        UPLOADED_BY_SENDER,
        
        /// <remarks/>
        FAXED_BY_SENDER,
        
        /// <remarks/>
        SIGNED,
        
        /// <remarks/>
        ESIGNED,
        
        /// <remarks/>
        APPROVED,
        
        /// <remarks/>
        OFFLINE_SYNC,
        
        /// <remarks/>
        FAXIN_RECEIVED,
        
        /// <remarks/>
        SIGNATURE_REQUESTED,
        
        /// <remarks/>
        APPROVAL_REQUESTED,
        
        /// <remarks/>
        RECALLED,
        
        /// <remarks/>
        REJECTED,
        
        /// <remarks/>
        EXPIRED,
        
        /// <remarks/>
        EXPIRED_AUTOMATICALLY,
        
        /// <remarks/>
        SHARED,
        
        /// <remarks/>
        EMAIL_VIEWED,
        
        /// <remarks/>
        AUTO_CANCELLED_CONVERSION_PROBLEM,
        
        /// <remarks/>
        SIGNER_SUGGESTED_CHANGES,
        
        /// <remarks/>
        SENDER_CREATED_NEW_REVISION,
        
        /// <remarks/>
        PASSWORD_AUTHENTICATION_FAILED,
        
        /// <remarks/>
        KBA_AUTHENTICATION_FAILED,
        
        /// <remarks/>
        KBA_AUTHENTICATED,
        
        /// <remarks/>
        WEB_IDENTITY_AUTHENTICATED,
        
        /// <remarks/>
        WEB_IDENTITY_SPECIFIED,
        
        /// <remarks/>
        EMAIL_BOUNCED,
        
        /// <remarks/>
        WIDGET_ENABLED,
        
        /// <remarks/>
        WIDGET_DISABLED,
        
        /// <remarks/>
        DELEGATED,
        
        /// <remarks/>
        REPLACED_SIGNER,
        
        /// <remarks/>
        VAULTED,
        
        /// <remarks/>
        DOCUMENTS_DELETED,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class DeviceLocation {
        
        private System.Nullable<float> latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private System.Nullable<float> longitudeField;
        
        private bool longitudeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum AgreementStatus {
        
        /// <remarks/>
        OUT_FOR_SIGNATURE,
        
        /// <remarks/>
        WAITING_FOR_REVIEW,
        
        /// <remarks/>
        SIGNED,
        
        /// <remarks/>
        APPROVED,
        
        /// <remarks/>
        ABORTED,
        
        /// <remarks/>
        DOCUMENT_LIBRARY,
        
        /// <remarks/>
        WIDGET,
        
        /// <remarks/>
        EXPIRED,
        
        /// <remarks/>
        ARCHIVED,
        
        /// <remarks/>
        PREFILL,
        
        /// <remarks/>
        AUTHORING,
        
        /// <remarks/>
        WAITING_FOR_FAXIN,
        
        /// <remarks/>
        WAITING_FOR_VERIFICATION,
        
        /// <remarks/>
        WIDGET_WAITING_FOR_VERIFICATION,
        
        /// <remarks/>
        WAITING_FOR_PAYMENT,
        
        /// <remarks/>
        OUT_FOR_APPROVAL,
        
        /// <remarks/>
        OTHER,
        
        /// <remarks/>
        SIGNED_IN_ADOBE_ACROBAT,
        
        /// <remarks/>
        SIGNED_IN_ADOBE_READER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class NextParticipantInfo {
        
        private string emailField;
        
        private string nameField;
        
        private System.DateTime waitingSinceField;
        
        private bool waitingSinceFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime waitingSince {
            get {
                return this.waitingSinceField;
            }
            set {
                this.waitingSinceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool waitingSinceSpecified {
            get {
                return this.waitingSinceFieldSpecified;
            }
            set {
                this.waitingSinceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto13.api.echosign")]
    public enum SecurityOption {
        
        /// <remarks/>
        OPEN_PROTECTED,
        
        /// <remarks/>
        OTHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto11.api.echosign")]
    public enum DocumentInfoListErrorCode {
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        NO_ACCESS_WITHOUT_CREDENTIAL,
        
        /// <remarks/>
        INVALID_CREDENTIAL,
        
        /// <remarks/>
        INVALID_EXTERNAL_ID,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class SupportingDocumentImageUrls {
        
        private PageImageUrls[] pagesField;
        
        private string fieldNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public PageImageUrls[] pages {
            get {
                return this.pagesField;
            }
            set {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class PageImageUrls {
        
        private PageImageUrl[] imagesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public PageImageUrl[] images {
            get {
                return this.imagesField;
            }
            set {
                this.imagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class PageImageUrl {
        
        private System.Nullable<ScalingType> scalingTypeField;
        
        private bool scalingTypeFieldSpecified;
        
        private System.Nullable<int> zoomField;
        
        private bool zoomFieldSpecified;
        
        private string urlField;
        
        private System.Nullable<int> widthField;
        
        private bool widthFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ScalingType> scalingType {
            get {
                return this.scalingTypeField;
            }
            set {
                this.scalingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scalingTypeSpecified {
            get {
                return this.scalingTypeFieldSpecified;
            }
            set {
                this.scalingTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> zoom {
            get {
                return this.zoomField;
            }
            set {
                this.zoomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zoomSpecified {
            get {
                return this.zoomFieldSpecified;
            }
            set {
                this.zoomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool widthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public enum ScalingType {
        
        /// <remarks/>
        FIXED_WIDTH,
        
        /// <remarks/>
        PERCENT_ZOOM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class DocumentImageUrls {
        
        private PageImageUrls[] pagesField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public PageImageUrls[] pages {
            get {
                return this.pagesField;
            }
            set {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class GetDocumentImageUrlsResult {
        
        private DocumentImageUrls[] imageUrlsField;
        
        private SupportingDocumentImageUrls[] supportingDocumentImageUrlsField;
        
        private System.Nullable<GetDocumentImageUrlsErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentImageUrls[] imageUrls {
            get {
                return this.imageUrlsField;
            }
            set {
                this.imageUrlsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SupportingDocumentImageUrls[] supportingDocumentImageUrls {
            get {
                return this.supportingDocumentImageUrlsField;
            }
            set {
                this.supportingDocumentImageUrlsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetDocumentImageUrlsErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum GetDocumentImageUrlsErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_VERSION_KEY,
        
        /// <remarks/>
        INVALID_PARTICIPANT,
        
        /// <remarks/>
        DOCUMENT_NOT_AVAILABLE,
        
        /// <remarks/>
        DOCUMENT_NOT_EXPOSED,
        
        /// <remarks/>
        DOCUMENT_REMOVED,
        
        /// <remarks/>
        DOCUMENT_DELETED,
        
        /// <remarks/>
        IMAGES_NOT_AVAILABLE,
        
        /// <remarks/>
        INTERNAL_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public partial class GetDocumentImageUrlsOptions {
        
        private bool attachSupportingDocumentsField;
        
        private bool attachSupportingDocumentsFieldSpecified;
        
        private System.Nullable<IncludeScalingTypes> includeScalingTypesField;
        
        private bool includeScalingTypesFieldSpecified;
        
        private string participantEmailField;
        
        private string versionKeyField;
        
        /// <remarks/>
        public bool attachSupportingDocuments {
            get {
                return this.attachSupportingDocumentsField;
            }
            set {
                this.attachSupportingDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attachSupportingDocumentsSpecified {
            get {
                return this.attachSupportingDocumentsFieldSpecified;
            }
            set {
                this.attachSupportingDocumentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<IncludeScalingTypes> includeScalingTypes {
            get {
                return this.includeScalingTypesField;
            }
            set {
                this.includeScalingTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includeScalingTypesSpecified {
            get {
                return this.includeScalingTypesFieldSpecified;
            }
            set {
                this.includeScalingTypesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                this.participantEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string versionKey {
            get {
                return this.versionKeyField;
            }
            set {
                this.versionKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto14.api.echosign")]
    public enum IncludeScalingTypes {
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        FIXED_WIDTH,
        
        /// <remarks/>
        PERCENT_ZOOM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class DocumentEventForUser {
        
        private string documentKeyField;
        
        private DocumentHistoryEvent eventField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentHistoryEvent @event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class GetDocumentEventsForUserResult {
        
        private DocumentEventForUser[] documentEventsForUserField;
        
        private System.Nullable<GetDocumentEventsForUserResultCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentEventForUser[] documentEventsForUser {
            get {
                return this.documentEventsForUserField;
            }
            set {
                this.documentEventsForUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetDocumentEventsForUserResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public enum GetDocumentEventsForUserResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_USER_CREDENTIALS,
        
        /// <remarks/>
        INVALID_DATE_RANGE,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        PERMISSION_DENIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto18.api.echosign")]
    public partial class DocumentEventsForUserOptions {
        
        private System.DateTime endDateField;
        
        private bool endDateFieldSpecified;
        
        private System.Nullable<AgreementEventType>[] filterEventsField;
        
        private bool onlyShowLatestEventField;
        
        private bool onlyShowLatestEventFieldSpecified;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        /// <remarks/>
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<AgreementEventType>[] filterEvents {
            get {
                return this.filterEventsField;
            }
            set {
                this.filterEventsField = value;
            }
        }
        
        /// <remarks/>
        public bool onlyShowLatestEvent {
            get {
                return this.onlyShowLatestEventField;
            }
            set {
                this.onlyShowLatestEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool onlyShowLatestEventSpecified {
            get {
                return this.onlyShowLatestEventFieldSpecified;
            }
            set {
                this.onlyShowLatestEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class GetComposeDocumentUrlResult {
        
        private string composeDocumentUrlField;
        
        private System.Nullable<GetComposeDocumentUrlResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string composeDocumentUrl {
            get {
                return this.composeDocumentUrlField;
            }
            set {
                this.composeDocumentUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GetComposeDocumentUrlResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum GetComposeDocumentUrlResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_ACCESS_TOKEN,
        
        /// <remarks/>
        INVALID_ARGUMENTS,
        
        /// <remarks/>
        FILE_RETRIEVAL_ERROR,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class SignatureLocation {
        
        private System.Nullable<float> bottomField;
        
        private bool bottomFieldSpecified;
        
        private System.Nullable<float> leftField;
        
        private bool leftFieldSpecified;
        
        private System.Nullable<int> pageNumberField;
        
        private bool pageNumberFieldSpecified;
        
        private System.Nullable<float> rightField;
        
        private bool rightFieldSpecified;
        
        private System.Nullable<float> topField;
        
        private bool topFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bottomSpecified {
            get {
                return this.bottomFieldSpecified;
            }
            set {
                this.bottomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leftSpecified {
            get {
                return this.leftFieldSpecified;
            }
            set {
                this.leftFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> pageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageNumberSpecified {
            get {
                return this.pageNumberFieldSpecified;
            }
            set {
                this.pageNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rightSpecified {
            get {
                return this.rightFieldSpecified;
            }
            set {
                this.rightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topSpecified {
            get {
                return this.topFieldSpecified;
            }
            set {
                this.topFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class DeviceInfo {
        
        private string applicationDescriptionField;
        
        private string deviceDescriptionField;
        
        private DeviceLocation deviceLocationField;
        
        private System.DateTime deviceTimeField;
        
        private bool deviceTimeFieldSpecified;
        
        private System.Nullable<int> deviceTimeZoneOffsetField;
        
        private bool deviceTimeZoneOffsetFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string applicationDescription {
            get {
                return this.applicationDescriptionField;
            }
            set {
                this.applicationDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeviceLocation deviceLocation {
            get {
                return this.deviceLocationField;
            }
            set {
                this.deviceLocationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime deviceTime {
            get {
                return this.deviceTimeField;
            }
            set {
                this.deviceTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceTimeSpecified {
            get {
                return this.deviceTimeFieldSpecified;
            }
            set {
                this.deviceTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> deviceTimeZoneOffset {
            get {
                return this.deviceTimeZoneOffsetField;
            }
            set {
                this.deviceTimeZoneOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceTimeZoneOffsetSpecified {
            get {
                return this.deviceTimeZoneOffsetFieldSpecified;
            }
            set {
                this.deviceTimeZoneOffsetFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class ComposeDocumentInfo {
        
        private System.Nullable<ComposeDocumentType> composeDocumentTypeField;
        
        private bool composeDocumentTypeFieldSpecified;
        
        private DeviceInfo deviceInfoField;
        
        private byte[] fileField;
        
        private string fileNameField;
        
        private string localeField;
        
        private string messageField;
        
        private RecipientInfo[] recipientsField;
        
        private SignatureLocation signatureLocationField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ComposeDocumentType> composeDocumentType {
            get {
                return this.composeDocumentTypeField;
            }
            set {
                this.composeDocumentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool composeDocumentTypeSpecified {
            get {
                return this.composeDocumentTypeFieldSpecified;
            }
            set {
                this.composeDocumentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeviceInfo deviceInfo {
            get {
                return this.deviceInfoField;
            }
            set {
                this.deviceInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] file {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto14.api.echosign")]
        public RecipientInfo[] recipients {
            get {
                return this.recipientsField;
            }
            set {
                this.recipientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SignatureLocation signatureLocation {
            get {
                return this.signatureLocationField;
            }
            set {
                this.signatureLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum ComposeDocumentType {
        
        /// <remarks/>
        SIGN_THEN_DELIVER,
        
        /// <remarks/>
        DELIVER_ONLY,
        
        /// <remarks/>
        SIGN_THEN_SEND,
        
        /// <remarks/>
        SEND_ONLY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class AuditTrailResult {
        
        private byte[] auditTrailPdfField;
        
        private System.Nullable<AuditTrailResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] auditTrailPdf {
            get {
                return this.auditTrailPdfField;
            }
            set {
                this.auditTrailPdfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AuditTrailResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public enum AuditTrailResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        DOCUMENT_HAS_BEEN_DELETED,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class EnableWidgetResult {
        
        private string errorMessageField;
        
        private System.Nullable<EnableWidgetResultCode> resultCodeField;
        
        private bool resultCodeFieldSpecified;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<EnableWidgetResultCode> resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultCodeSpecified {
            get {
                return this.resultCodeFieldSpecified;
            }
            set {
                this.resultCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public enum EnableWidgetResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        ALREADY_ENABLED,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class EnableWidgetOptions {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class DisableWidgetResult {
        
        private string errorMessageField;
        
        private System.Nullable<DisableWidgetResultCode> resultCodeField;
        
        private bool resultCodeFieldSpecified;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DisableWidgetResultCode> resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultCodeSpecified {
            get {
                return this.resultCodeFieldSpecified;
            }
            set {
                this.resultCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public enum DisableWidgetResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        ALREADY_DISABLED,
        
        /// <remarks/>
        TOO_MANY_ACTIONS_SPECIFIED,
        
        /// <remarks/>
        NO_ACTION_SPECIFIED,
        
        /// <remarks/>
        INVALID_URL,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class DisableWidgetOptions {
        
        private string messageField;
        
        private string redirectUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string redirectUrl {
            get {
                return this.redirectUrlField;
            }
            set {
                this.redirectUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto13.api.echosign")]
    public partial class DeliverDocumentResult {
        
        private string deliveryURLField;
        
        private System.Nullable<DeliverDocumentResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deliveryURL {
            get {
                return this.deliveryURLField;
            }
            set {
                this.deliveryURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DeliverDocumentResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto13.api.echosign")]
    public enum DeliverDocumentResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        FILE_RETRIEVAL_ERROR,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public partial class DeleteGroupResult {
        
        private System.Nullable<DeleteGroupResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DeleteGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public enum DeleteGroupResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_GROUP_KEY,
        
        /// <remarks/>
        GROUP_NOT_EMPTY,
        
        /// <remarks/>
        CANNOT_DELETE_DEFAULT_GROUP,
        
        /// <remarks/>
        TERMS_NOT_ACCEPTED,
        
        /// <remarks/>
        NOT_IN_ACCOUNT,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class DelegateSigningResult {
        
        private System.Nullable<DelegateSigningResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DelegateSigningResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public enum DelegateSigningResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_CREDENTIALS,
        
        /// <remarks/>
        INVALID_DOCUMENT_KEY,
        
        /// <remarks/>
        INVALID_OPTIONS,
        
        /// <remarks/>
        INVALID_NEW_SIGNER,
        
        /// <remarks/>
        INVALID_MESSAGE,
        
        /// <remarks/>
        SIGNING_DELEGATION_NOT_ALLOWED,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto17.api.echosign")]
    public partial class DelegateSigningOptions {
        
        private string messageField;
        
        private string newSignerEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newSignerEmail {
            get {
                return this.newSignerEmailField;
            }
            set {
                this.newSignerEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class UserCredentials {
        
        private string emailField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class UrlWidgetCreationResult {
        
        private string documentKeyField;
        
        private System.Nullable<UrlWidgetCreationResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<UrlWidgetCreationResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto8.api.echosign")]
    public enum UrlWidgetCreationResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_URL,
        
        /// <remarks/>
        INVALID_SIGNATURE_FLOW,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto8.api.echosign")]
    public partial class WidgetPersonalizationInfo {
        
        private System.Nullable<bool> allowManualVerificationField;
        
        private bool allowManualVerificationFieldSpecified;
        
        private string commentField;
        
        private string emailField;
        
        private System.DateTime expirationField;
        
        private bool expirationFieldSpecified;
        
        private System.Nullable<bool> reusableField;
        
        private bool reusableFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> allowManualVerification {
            get {
                return this.allowManualVerificationField;
            }
            set {
                this.allowManualVerificationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowManualVerificationSpecified {
            get {
                return this.allowManualVerificationFieldSpecified;
            }
            set {
                this.allowManualVerificationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationSpecified {
            get {
                return this.expirationFieldSpecified;
            }
            set {
                this.expirationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> reusable {
            get {
                return this.reusableField;
            }
            set {
                this.reusableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reusableSpecified {
            get {
                return this.reusableFieldSpecified;
            }
            set {
                this.reusableFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class LibraryDocumentCreationResult {
        
        private string documentKeyField;
        
        private System.Nullable<LibraryDocumentCreationResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<LibraryDocumentCreationResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public enum LibraryDocumentCreationResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public partial class LibraryDocumentCreationInfo {
        
        private FileInfo[] fileInfosField;
        
        private System.Nullable<LibrarySharingMode> librarySharingModeField;
        
        private bool librarySharingModeFieldSpecified;
        
        private System.Nullable<LibraryTemplateType>[] libraryTemplateTypesField;
        
        private string nameField;
        
        private System.Nullable<SignatureFlow> signatureFlowField;
        
        private bool signatureFlowFieldSpecified;
        
        private System.Nullable<SignatureType> signatureTypeField;
        
        private bool signatureTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto.api.echosign")]
        public FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                this.fileInfosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<LibrarySharingMode> librarySharingMode {
            get {
                return this.librarySharingModeField;
            }
            set {
                this.librarySharingModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool librarySharingModeSpecified {
            get {
                return this.librarySharingModeFieldSpecified;
            }
            set {
                this.librarySharingModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto17.api.echosign")]
        public System.Nullable<LibraryTemplateType>[] libraryTemplateTypes {
            get {
                return this.libraryTemplateTypesField;
            }
            set {
                this.libraryTemplateTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SignatureFlow> signatureFlow {
            get {
                return this.signatureFlowField;
            }
            set {
                this.signatureFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signatureFlowSpecified {
            get {
                return this.signatureFlowFieldSpecified;
            }
            set {
                this.signatureFlowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SignatureType> signatureType {
            get {
                return this.signatureTypeField;
            }
            set {
                this.signatureTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signatureTypeSpecified {
            get {
                return this.signatureTypeFieldSpecified;
            }
            set {
                this.signatureTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto9.api.echosign")]
    public enum LibrarySharingMode {
        
        /// <remarks/>
        USER,
        
        /// <remarks/>
        GROUP,
        
        /// <remarks/>
        ACCOUNT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class CreateGroupResult {
        
        private string groupKeyField;
        
        private System.Nullable<CreateGroupResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                this.groupKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<CreateGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto15.api.echosign")]
    public enum CreateGroupResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_GROUP_NAME,
        
        /// <remarks/>
        NOT_IN_ACCOUNT,
        
        /// <remarks/>
        NO_PERMISSION_TO_EXECUTE_METHOD,
        
        /// <remarks/>
        TERMS_NOT_ACCEPTED,
        
        /// <remarks/>
        MISC_ERROR,
        
        /// <remarks/>
        EXCEPTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class FormCreationResult {
        
        private DocumentKey documentKeyField;
        
        private string widgetCodeField;
        
        private string widgetUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentKey documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string widgetCode {
            get {
                return this.widgetCodeField;
            }
            set {
                this.widgetCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string widgetUrl {
            get {
                return this.widgetUrlField;
            }
            set {
                this.widgetUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class FormCreationInfo {
        
        private ExternalId externalIdField;
        
        private FileInfo[] fileInfosField;
        
        private System.Nullable<FormType> formTypeField;
        
        private bool formTypeFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExternalId externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                this.fileInfosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<FormType> formType {
            get {
                return this.formTypeField;
            }
            set {
                this.formTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool formTypeSpecified {
            get {
                return this.formTypeFieldSpecified;
            }
            set {
                this.formTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum FormType {
        
        /// <remarks/>
        NORMAL,
        
        /// <remarks/>
        WIDGET,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto16.api.echosign")]
    public partial class EmbeddedWidgetCreationResult {
        
        private string documentKeyField;
        
        private System.Nullable<EmbeddedWidgetCreationResultErrorCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private string javascriptField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                this.documentKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<EmbeddedWidgetCreationResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string javascript {
            get {
                return this.javascriptField;
            }
            set {
                this.javascriptField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto8.api.echosign")]
    public enum EmbeddedWidgetCreationResultErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        INVALID_JAVASCRIPT,
        
        /// <remarks/>
        INVALID_SIGNATURE_FLOW,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto8.api.echosign")]
    public partial class WidgetCompletionInfo {
        
        private bool deframeField;
        
        private bool deframeFieldSpecified;
        
        private int delayField;
        
        private bool delayFieldSpecified;
        
        private string urlField;
        
        /// <remarks/>
        public bool deframe {
            get {
                return this.deframeField;
            }
            set {
                this.deframeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deframeSpecified {
            get {
                return this.deframeFieldSpecified;
            }
            set {
                this.deframeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool delaySpecified {
            get {
                return this.delayFieldSpecified;
            }
            set {
                this.delayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto8.api.echosign")]
    public partial class WidgetCreationInfo {
        
        private CallbackInfo callbackInfoField;
        
        private RecipientInfo[] counterSignersField;
        
        private FileInfo[] fileInfosField;
        
        private FileInfo[] formFieldLayerTemplatesField;
        
        private string localeField;
        
        private MergeFieldInfo mergeFieldInfoField;
        
        private string nameField;
        
        private SecurityOptions securityOptionsField;
        
        private System.Nullable<SignatureFlow> signatureFlowField;
        
        private bool signatureFlowFieldSpecified;
        
        private VaultingInfo vaultingInfoField;
        
        private WidgetCompletionInfo widgetAuthFailureInfoField;
        
        private WidgetCompletionInfo widgetCompletionInfoField;
        
        private RecipientSecurityOption widgetSignerSecurityOptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CallbackInfo callbackInfo {
            get {
                return this.callbackInfoField;
            }
            set {
                this.callbackInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto14.api.echosign")]
        public RecipientInfo[] counterSigners {
            get {
                return this.counterSignersField;
            }
            set {
                this.counterSignersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto.api.echosign")]
        public FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                this.fileInfosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dto.api.echosign")]
        public FileInfo[] formFieldLayerTemplates {
            get {
                return this.formFieldLayerTemplatesField;
            }
            set {
                this.formFieldLayerTemplatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MergeFieldInfo mergeFieldInfo {
            get {
                return this.mergeFieldInfoField;
            }
            set {
                this.mergeFieldInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SecurityOptions securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                this.securityOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SignatureFlow> signatureFlow {
            get {
                return this.signatureFlowField;
            }
            set {
                this.signatureFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signatureFlowSpecified {
            get {
                return this.signatureFlowFieldSpecified;
            }
            set {
                this.signatureFlowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public VaultingInfo vaultingInfo {
            get {
                return this.vaultingInfoField;
            }
            set {
                this.vaultingInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WidgetCompletionInfo widgetAuthFailureInfo {
            get {
                return this.widgetAuthFailureInfoField;
            }
            set {
                this.widgetAuthFailureInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WidgetCompletionInfo widgetCompletionInfo {
            get {
                return this.widgetCompletionInfoField;
            }
            set {
                this.widgetCompletionInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RecipientSecurityOption widgetSignerSecurityOptions {
            get {
                return this.widgetSignerSecurityOptionsField;
            }
            set {
                this.widgetSignerSecurityOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class SenderInfo {
        
        private string emailField;
        
        private string passwordField;
        
        private string userKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userKey {
            get {
                return this.userKeyField;
            }
            set {
                this.userKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto7.api.echosign")]
    public partial class CreateAccountResult {
        
        private System.Nullable<CreateAccountResultCode> errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private bool successField;
        
        private bool successFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<CreateAccountResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successSpecified {
            get {
                return this.successFieldSpecified;
            }
            set {
                this.successFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto7.api.echosign")]
    public enum CreateAccountResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        INVALID_API_KEY,
        
        /// <remarks/>
        ACCOUNT_CREATION_NOT_ENABLED,
        
        /// <remarks/>
        INVALID_SEAT_COUNT,
        
        /// <remarks/>
        USER_CREATION_ERROR,
        
        /// <remarks/>
        USER_ALREADY_HAS_ACCOUNT,
        
        /// <remarks/>
        EXCEPTION,
        
        /// <remarks/>
        MISC_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto7.api.echosign")]
    public partial class AccountCreationInfo {
        
        private System.Nullable<AccountType> accountTypeField;
        
        private bool accountTypeFieldSpecified;
        
        private string companyNameField;
        
        private System.Nullable<int> numSeatsField;
        
        private bool numSeatsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<AccountType> accountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountTypeSpecified {
            get {
                return this.accountTypeFieldSpecified;
            }
            set {
                this.accountTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string companyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> numSeats {
            get {
                return this.numSeatsField;
            }
            set {
                this.numSeatsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSeatsSpecified {
            get {
                return this.numSeatsFieldSpecified;
            }
            set {
                this.numSeatsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public partial class UserCreationInfo {
        
        private string companyField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string emailField;
        
        private string firstNameField;
        
        private string groupKeyField;
        
        private string lastNameField;
        
        private System.Nullable<OptIn> optInField;
        
        private bool optInFieldSpecified;
        
        private string passwordField;
        
        private string phoneField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                this.groupKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<OptIn> optIn {
            get {
                return this.optInField;
            }
            set {
                this.optInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool optInSpecified {
            get {
                return this.optInFieldSpecified;
            }
            set {
                this.optInFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dto.api.echosign")]
    public enum OptIn {
        
        /// <remarks/>
        YES,
        
        /// <remarks/>
        NO,
        
        /// <remarks/>
        UNKNOWN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void cancelDocumentCompletedEventHandler(object sender, cancelDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CancelDocumentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CancelDocumentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createAccountCompletedEventHandler(object sender, createAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateAccountResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateAccountResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createEmbeddedWidgetCompletedEventHandler(object sender, createEmbeddedWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEmbeddedWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEmbeddedWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmbeddedWidgetCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmbeddedWidgetCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createFormCompletedEventHandler(object sender, createFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FormCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FormCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createGroupCompletedEventHandler(object sender, createGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateGroupResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateGroupResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createLibraryDocumentCompletedEventHandler(object sender, createLibraryDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createLibraryDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createLibraryDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LibraryDocumentCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LibraryDocumentCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createPersonalEmbeddedWidgetCompletedEventHandler(object sender, createPersonalEmbeddedWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPersonalEmbeddedWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPersonalEmbeddedWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmbeddedWidgetCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmbeddedWidgetCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createPersonalUrlWidgetCompletedEventHandler(object sender, createPersonalUrlWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPersonalUrlWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPersonalUrlWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UrlWidgetCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UrlWidgetCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createUrlWidgetCompletedEventHandler(object sender, createUrlWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createUrlWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createUrlWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UrlWidgetCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UrlWidgetCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createUserCompletedEventHandler(object sender, createUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void delegateSigningCompletedEventHandler(object sender, delegateSigningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class delegateSigningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal delegateSigningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DelegateSigningResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DelegateSigningResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteGroupCompletedEventHandler(object sender, deleteGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteGroupResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteGroupResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deliverDocumentCompletedEventHandler(object sender, deliverDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deliverDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deliverDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeliverDocumentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeliverDocumentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void disableWidgetCompletedEventHandler(object sender, disableWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DisableWidgetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DisableWidgetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void enableWidgetCompletedEventHandler(object sender, enableWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EnableWidgetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EnableWidgetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAuditTrailCompletedEventHandler(object sender, getAuditTrailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuditTrailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuditTrailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditTrailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditTrailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getComposeDocumentUrlCompletedEventHandler(object sender, getComposeDocumentUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getComposeDocumentUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getComposeDocumentUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetComposeDocumentUrlResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetComposeDocumentUrlResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentByVersionCompletedEventHandler(object sender, getDocumentByVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentByVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentByVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentEventsForUserCompletedEventHandler(object sender, getDocumentEventsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentEventsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentEventsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentEventsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentEventsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentImageUrlsCompletedEventHandler(object sender, getDocumentImageUrlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentImageUrlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentImageUrlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentImageUrlsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentImageUrlsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentInfoCompletedEventHandler(object sender, getDocumentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentInfosByExternalIdCompletedEventHandler(object sender, getDocumentInfosByExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentInfosByExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentInfosByExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfoList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentPagesInfoCompletedEventHandler(object sender, getDocumentPagesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentPagesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentPagesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentPagesInfoResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentPagesInfoResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentUrlByVersionCompletedEventHandler(object sender, getDocumentUrlByVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentUrlByVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentUrlByVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentUrlResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentUrlResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentUrlsCompletedEventHandler(object sender, getDocumentUrlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentUrlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentUrlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentUrlsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentUrlsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentsCompletedEventHandler(object sender, getDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDocumentsForUserCompletedEventHandler(object sender, getDocumentsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEmbeddedViewCompletedEventHandler(object sender, getEmbeddedViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmbeddedViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmbeddedViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetEmbeddedViewResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetEmbeddedViewResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getFormDataCompletedEventHandler(object sender, getFormDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetFormDataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetFormDataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getGroupsInAccountCompletedEventHandler(object sender, getGroupsInAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupsInAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupsInAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetGroupsInAccountResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetGroupsInAccountResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getImagesByVersionCompletedEventHandler(object sender, getImagesByVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImagesByVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImagesByVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentImageList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentImageList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getLatestDocumentCompletedEventHandler(object sender, getLatestDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLatestDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getLatestDocumentUrlCompletedEventHandler(object sender, getLatestDocumentUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestDocumentUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLatestDocumentUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentUrlResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentUrlResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getLatestImagesCompletedEventHandler(object sender, getLatestImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLatestImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentImageList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentImageList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getLibraryDocumentsForUserCompletedEventHandler(object sender, getLibraryDocumentsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLibraryDocumentsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLibraryDocumentsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetLibraryDocumentsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetLibraryDocumentsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMegaSignDocumentCompletedEventHandler(object sender, getMegaSignDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMegaSignDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMegaSignDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetMegaSignDocumentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetMegaSignDocumentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMyDocumentsCompletedEventHandler(object sender, getMyDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMyDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMyLibraryDocumentsCompletedEventHandler(object sender, getMyLibraryDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyLibraryDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMyLibraryDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetLibraryDocumentsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetLibraryDocumentsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMyWidgetsCompletedEventHandler(object sender, getMyWidgetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyWidgetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMyWidgetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetWidgetsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetWidgetsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSignerFormFieldsCompletedEventHandler(object sender, getSignerFormFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSignerFormFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSignerFormFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetSignerFormFieldsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetSignerFormFieldsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSigningUrlCompletedEventHandler(object sender, getSigningUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSigningUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSigningUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SigningUrlResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SigningUrlResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSupportingDocumentsCompletedEventHandler(object sender, getSupportingDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupportingDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupportingDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetSupportingDocumentsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetSupportingDocumentsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUserDocumentsCompletedEventHandler(object sender, getUserDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUserInfoResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUserInfoResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUsersInAccountCompletedEventHandler(object sender, getUsersInAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersInAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersInAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUsersInAccountResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUsersInAccountResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUsersInGroupCompletedEventHandler(object sender, getUsersInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUsersInGroupResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUsersInGroupResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getWidgetsForUserCompletedEventHandler(object sender, getWidgetsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWidgetsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWidgetsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetWidgetsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetWidgetsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void initiateInteractiveSendDocumentCompletedEventHandler(object sender, initiateInteractiveSendDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class initiateInteractiveSendDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal initiateInteractiveSendDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InitiateInteractiveSendDocumentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InitiateInteractiveSendDocumentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void moveUsersToGroupCompletedEventHandler(object sender, moveUsersToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveUsersToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveUsersToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MoveUsersToGroupResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MoveUsersToGroupResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void notifyDocumentVaultedCompletedEventHandler(object sender, notifyDocumentVaultedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class notifyDocumentVaultedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal notifyDocumentVaultedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotifyDocumentVaultedResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotifyDocumentVaultedResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void personalizeEmbeddedWidgetCompletedEventHandler(object sender, personalizeEmbeddedWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class personalizeEmbeddedWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal personalizeEmbeddedWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmbeddedWidgetCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmbeddedWidgetCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void personalizeUrlWidgetCompletedEventHandler(object sender, personalizeUrlWidgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class personalizeUrlWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal personalizeUrlWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UrlWidgetCreationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UrlWidgetCreationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void rejectDocumentCompletedEventHandler(object sender, rejectDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rejectDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rejectDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RejectDocumentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RejectDocumentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void removeDocumentCompletedEventHandler(object sender, removeDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoveDocumentResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoveDocumentResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void renameGroupCompletedEventHandler(object sender, renameGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renameGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renameGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenameGroupResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenameGroupResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void replaceSignerCompletedEventHandler(object sender, replaceSignerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class replaceSignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal replaceSignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReplaceSignerResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplaceSignerResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchUserDocumentsCompletedEventHandler(object sender, searchUserDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchUserDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchUserDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentsForUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentsForUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void sendDocumentCompletedEventHandler(object sender, sendDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentKey[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentKey[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void sendDocumentInteractiveCompletedEventHandler(object sender, sendDocumentInteractiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendDocumentInteractiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendDocumentInteractiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendDocumentInteractiveResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendDocumentInteractiveResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void sendDocumentMegaSignCompletedEventHandler(object sender, sendDocumentMegaSignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendDocumentMegaSignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendDocumentMegaSignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendDocumentMegaSignResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendDocumentMegaSignResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void sendReminderCompletedEventHandler(object sender, sendReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendReminderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendReminderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void testEchoFileCompletedEventHandler(object sender, testEchoFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testEchoFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testEchoFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void testPingCompletedEventHandler(object sender, testPingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testPingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testPingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Pong Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Pong)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void verifyUserCompletedEventHandler(object sender, verifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserVerificationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserVerificationInfo)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591